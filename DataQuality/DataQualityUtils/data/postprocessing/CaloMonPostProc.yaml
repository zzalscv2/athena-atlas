#
#  Copyright (C) 2002-2021 CERN for the benefit of the ATLAS collaboration
#
# Author: Margherita Spalla (margherita.spalla@cern.ch)
# Post-processing of histograms from CaloMonitoring 
#
# Functions implemented by this config are defined here: Calorimeter/CaloMonitoring/python/CaloMonTransforms.py
#

#####CaloMonitoring/LArCellMonAlg

###For reference, full list of threshold names from LArCellMonAlg: noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto


#1D_occupancy

#this is for the plots with 'doPercentage' OFF, to turn it on, move a threshold name (<thr> field) from this instance to the next
---
Input: [  'CaloMonitoring/LArCellMon_NoTrigSel/1d_Occupancy/RAW_CellOccupancyVs(?P<var>Eta|Phi)_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto)', 'CaloMonitoring/LArCellMon_NoTrigSel/ActiveCells/NCellsActiveVs(?P<var>Eta|Phi)_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)', 'CaloMonitoring/LArCellMon_NoTrigSel/Summary/nEvtsPerThreshold']
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/1d_Occupancy/CellOccupancyVs{var}_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideHistCaloMon
Parameters: { doPercentage : True }
Description: 1d_occupancy_doPercentageTRUE

---
Input: [  'CaloMonitoring/LArCellMon_NoTrigSel/1d_Occupancy/RAW_CellOccupancyVs(?P<var>Eta|Phi)_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)', 'CaloMonitoring/LArCellMon_NoTrigSel/ActiveCells/NCellsActiveVs(?P<var>Eta|Phi)_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)', 'CaloMonitoring/LArCellMon_NoTrigSel/Summary/nEvtsPerThreshold']
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/1d_Occupancy/CellOccupancyVs{var}_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideHistCaloMon
Parameters: { doPercentage : False }
Description: 1d_occupancy_doPercentageFALSE


#Average energy: only list the thresholds (field <thr>) for which you want average energy plot
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_TotalEnergy/TotalEnergyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_rndm_CSCveto|5Sigma_CSCveto)', 'CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_rndm_CSCveto|5Sigma_CSCveto)' ]
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_AvgEnergy/CellAvgEnergyVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByOccupancy
Parameters: { titleToReplace : 'Total' , replaceTitWith : 'Average' }
Description: average_energy

#Average time: here you can use all thresholds, the 'TotalTime' plot will only be created if we want average time
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_AvgTime/TotalTimeVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)', 'CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)' ]
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_AvgTime/AverageTimeVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByOccupancy
Parameters: { titleToReplace : 'Total' , replaceTitWith : 'Average' }
Description: average_time


#fraction past time threshold: here you can use all thresholds, the plot will only be created if we want fractionPastTth
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_FractionOutOfTime/RAW_fractionPastTthVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)','CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)' ]
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_FractionOutOfTime/fractionPastTthVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByOccupancy
Description: OOT_fraction


#Average quality: here you can use all thresholds, the 'TotalQuality' plot will only be created if we want average quality
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_AvgQuality/TotalQualityVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)', 'CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)' ]
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_AvgQuality/AverageQualityVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByOccupancy
Parameters: { titleToReplace : 'Total' , replaceTitWith : 'Average' }
Description: average_quality

#fraction past Q threshold: here you can use all thresholds, the plot will only be created if we want fractionPastQTh
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_PoorQualityFraction/RAW_fractionOverQthVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)','CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto|noEth_rndm_CSCveto|5Sigma_CSCveto|hiEth_CSCveto|hiEth_noVeto|met_CSCveto)' ]
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_PoorQualityFraction/fractionOverQthVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByOccupancy
Description: poorQuality_fraction


#2D percentage occupancy (only the thresholds for which percentage occupancy is required
---
Input: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/CellOccupancyVsEtaPhi_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)_(?P<thr>noEth_CSCveto|medEth_CSCveto)','CaloMonitoring/LArCellMon_NoTrigSel/Summary/nEvtsPerThreshold']
Output: [ 'CaloMonitoring/LArCellMon_NoTrigSel/2d_Occupancy/PercentCellOccupancyVsEtaPhi_{lay}{side}_{thr}' ]
Function: CaloMonitoring.CaloMonTransforms.divideByAcceptedEvts
Description: 2D_percentage_occupancy


#2D percentage of cells contributing to clusters
---
Input: [ 'CaloMonitoring/LArClusterCellMon/ClusterCell/NClusteredCells_(?P<lay>EMBP|EMB1|EMB2|EMB3|HEC0|HEC1|HEC2|HEC3|EMECP|EMEC1|EMEC2|EMEC3|FCAL1|FCAL2|FCAL3)(?P<side>A|C)','CaloMonitoring/LArClusterCellMon/Summary/eventCounter' ]
Output: [ 'CaloMonitoring/LArClusterCellMon/ClusterCell/PercentClusteredCells_{lay}{side}' ]
Function: CaloMonitoring.CaloMonTransforms.simpleDivideByAcceptedEvts
Parameters: { titleToReplace : 'Total' , replaceTitWith : 'Average' }
Description: 2D_cluster_cell

#1D percentage of cells contributing to clusters
---
Input: ['CaloMonitoring/LArClusterCellMon/Summary/cellhash','CaloMonitoring/LArClusterCellMon/Summary/eventCounter' ]
Output: [ 'CaloMonitoring/LArClusterCellMon/Summary/cellhashPercent' ]
Function: CaloMonitoring.CaloMonTransforms.simpleDivideByAcceptedEvts
Parameters: { titleToReplace : 'Total' , replaceTitWith : 'Average' }
Description: 1D_cluster_cell
