# **********************************************************************
# $Id: heavyions_run.config 786895 2016-11-28 13:55:42Z wengler $
# **********************************************************************

############################################################
# CTP
############################################################

#############
# Output
#############

output top_level {
  output CentralTrigger {
    output ErrorSummary {
    }
    output CTP {
    }
    output MuCTPI {
      output Cand {
        output Expert {
        }
      }
      output Mult {
        output Expert {
        }
      }
      output Timing {
        output Expert {
        }
      }
      output TOB {
        output Expert {
        }
      }
    }
    output MuCTPI-SL {
    }
    output CTP-MuCTPI {
    }
  }
}

#######################
# Histogram Assessments
#######################

dir CT {
  algorithm = CTP_GatherData

  output = CentralTrigger/ErrorSummary
  hist errorPerLumiBlock {
    display = LogY,AxisRange(0.1,1e+11,"Y")
    algorithm = errorSummary_Entries
  }
  hist incompleteFragmentType {
  }
  dir CTP {
    output = CentralTrigger/CTP
    hist errorSummaryCTP {
      display = LogY,AxisRange(1e-12,10,"Y")
      algorithm = errorSummary_Entries
    }
    hist errorSummaryPerLumiBlockCTP {
      display = SetPalette(1)
    }
    hist deltaBcid {
      display = LogY
    }
    hist triggerType {
    }
    hist timeSinceLBStart {
    }
    hist timeUntilLBEnd {
    }
    hist timeSinceL1A {
      display = LogY
    }
    hist turnCounterTimeError {
      display = LogY
    }
    hist pitBC {
      display = SetPalette(1)
    }
    hist pitFirstBC {
      display = SetPalette(1)
    }
    hist tav {
    }
    hist ctpStatus1 {
    }
    hist ctpStatus2 {
    }
    hist turnCounterTimeErrorVsLb {
    }
    hist l1ItemsBPSimMismatchItems {
    }
  }
  dir MUCTPI {
    output = CentralTrigger/MuCTPI
    hist errorSummaryMUCTPI {
    algorithm = errorSummary_Entries
    description = MUCTPI event-inferred errors (see axis labels)
    display = LogY
    }
    hist errorSummaryPerLumiBlockMUCTPI {
    algorithm = errorSummary_Entries
    description = MUCTPI event-inferred errors per LB (see axis labels)
    }
    hist statusDataWordMUCTPI {
    algorithm = errorSummary_Entries
    description = MUCTPI status dataWord errors (see https://edms.cern.ch/document/2712287/1)
    }
    hist statusDataWordPerLumiBlockMUCTPI {
    algorithm = errorSummary_Entries
    description = MUCTPI status dataWord errors per LB (see https://edms.cern.ch/document/2712287/1)
    }
    dir Mult {
      output = CentralTrigger/MuCTPI/Mult
      hist multThr {
      algorithm = MUCTPI_Kolmogorov
      description = MUCTPI Mult dataWord thresholds (decoded from nbits array)
      }
      hist multThrVsLB {
      algorithm = MUCTPI_Histogram_Not_Empty
      description = MUCTPI Mult dataWord thresholds per LB (decoded from nbits array)
      }
      hist multBits {
      algorithm = MUCTPI_Kolmogorov
      description = MUCTPI Mult dataWord individual bits
      }
      hist multBitsVsLB {
      algorithm = MUCTPI_Histogram_Not_Empty
      description = MUCTPI Mult dataWord individual bits per LB
      }
    }
    dir Cand {
      output = CentralTrigger/MuCTPI/Cand
      hist candPtBA {
      }
      hist candPtEC {
      }
      hist candPtFW {
      }
	  hist candCount {
	    display = LogY
	  }
	  hist candCountVsLB {
	    display = LogZ
	  }
      hist candErrorflagVsSLBAOtherSlicePerLB {
      algorithm = errorSummary_Entries
      description = MUCTPI Candidate dataWord Error flag per LB (BA)
      }
      hist candErrorflagVsSLECOtherSlicePerLB {
      algorithm = errorSummary_Entries
      description = MUCTPI Candidate dataWord Error flag per LB (EC)
      }
      hist candErrorflagVsSLFWOtherSlicePerLB {
      algorithm = errorSummary_Entries
      description = MUCTPI Candidate dataWord Error flag per LB (FW)
      }
	  dir Expert {
	    output = CentralTrigger/MuCTPI/Cand/Expert
		hist candSLVsLBBA {
		  algorithm = check_MUCTPISLAnyHit
		}
		hist candSLVsLBEC {
		  algorithm = check_MUCTPISLAnyHit
		}
		hist candSLVsLBFW {
		  algorithm = check_MUCTPISLAnyHit
		}
		hist candVetoFlag_RoiVsSLBA {
		}
		hist candVetoFlag_RoiVsSLEC {
		}
		hist candVetoFlag_RoiVsSLFW {
		}
		hist candVetoFlag_EtaPhiBA {
		}
		hist candVetoFlag_EtaPhiEC {
		}
		hist candVetoFlag_EtaPhiFW {
		}
		hist candRoiVsSLBACentralSlice {
		}
		hist candRoiVsSLECCentralSlice {
		}
		hist candRoiVsSLFWCentralSlice {
		}
		hist candRoiVsSLBAOtherSlice {
		}
		hist candRoiVsSLECOtherSlice {
		}
		hist candRoiVsSLFWOtherSlice {
		}
		hist candCandFlagsVsSLBACentralSlice {
		}
		hist candCandFlagsVsSLECCentralSlice {
		}
		hist candCandFlagsVsSLFWCentralSlice {
		}
		hist candEtaPhi_PhiOverlap_BA {
		}
		hist candEtaPhi_Gt1CandRoi_BA {
		}
		hist candEtaPhi_NSWMonFlag_EC {
		}
		hist candEtaPhi_NSWMonFlag_FW {
		}
		hist candEtaPhi_SectorFlagGtN_BA {
		}
		hist candEtaPhi_SectorFlagGtN_EC {
		}
		hist candEtaPhi_SectorFlagGtN_FW {
		}
		hist candErrorflagVsSLBACentralSlicePerLB {
		}
		hist candErrorflagVsSLECCentralSlicePerLB {
		}
		hist candErrorflagVsSLFWCentralSlicePerLB {
		}
		hist candErrorflagVsSLBAOtherSlicePerLB {
		}
		hist candErrorflagVsSLECOtherSlicePerLB {
		}
		hist candErrorflagVsSLFWOtherSlicePerLB {
		}
	  }
    }
    dir TOB {
	  output = CentralTrigger/MuCTPI/TOB
      hist tobEtaPhi_BA {
      }
	  hist tobEtaPhi_EC {
	  }
	  hist tobEtaPhi_FW {
	  }
	  hist tobPtVsEta_BA {
	  }
	  hist tobPtVsEta_EC {
	  }
	  hist tobPtVsEta_FW {
	  }
	  hist tobPtVsPhi_BA {
	  }
	  hist tobPtVsPhi_EC {
	  }
	  hist tobPtVsPhi_FW {
	  }
	  hist tobEtaPhi_GoodMF_EC {
	  }
	  hist tobEtaPhi_BW23_EC {
	  }
      hist tobEtaPhi_Charge_EC {
      }
	  hist tobEtaPhi_InnerCoin_EC {
	  }	  	  
	  hist tobEtaPhi_GoodMF_FW {
	  }
	  hist tobEtaPhi_BW23_FW {
	  }
      hist tobEtaPhi_Charge_FW {
      }
	  hist tobEtaPhi_InnerCoin_FW {
	  }
	  hist tobCount {
	    display = LogY
	  }
	  dir Expert {
	    output = CentralTrigger/MuCTPI/TOB/Expert
		hist tobEtaPhiA {
		}	
		hist tobEtaPhiA_GoodMF {
		}
		hist tobEtaPhiA_InnerCoin {
		}						
		hist tobEtaPhiA_BW23 {
		}
		hist tobEtaPhiA_Charge {
		}
		hist tobEtaPhiC {
		}
		hist tobEtaPhiC_GoodMF {
		}
		hist tobEtaPhiC_InnerCoin {
		}
		hist tobEtaPhiC_BW23 {
		}
		hist tobEtaPhiC_Charge {
		}
		hist tobPtVsEtaA {
		}
		hist tobPtVsPhiA {
		}
		hist tobPtVsEtaC {
		}
		hist tobPtVsPhiC {
		}
      }		
    }
    dir Timing {
      output = CentralTrigger/MuCTPI/Timing
      hist candSliceVsSLBA {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (BA)
      }
      hist candSliceVsSLEC {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (EC)
      }
      hist candSliceVsSLFW {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (FW)
      }
      hist candSliceVsSLBAFirstInTrain {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (Cut: BG=FirstInTrain) (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (BA)
      }
      hist candSliceVsSLECFirstInTrain {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (Cut: BG=FirstInTrain) (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (EC)
      }
      hist candSliceVsSLFWFirstInTrain {
      algorithm = check_MUCTPISLTiming
      description = MUCTPI Candidate timeslice hitmap per LB (Cut: BG=FirstInTrain) (central bin corresponds to the L1-triggered BCID; normal to have late tails; only minimal early hits expected) (FW)
      }
    }
  }
  dir CTPMUCTPI {
    output = CentralTrigger/CTP-MuCTPI
    hist bcidDifference {
      display = LogY
    }
    hist headerBCIDDifference {
      display = LogY
    }
    hist headerL1IdDifference {
      display = LogY
    }
  }
}

#############
# Algorithms
#############

algorithm CTP_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm errorSummary_Entries {
  libname = libdqm_algorithms.so
  name = Bins_NotEqual_Threshold
  BinThreshold = 0.
  thresholds = errorSummary_Thresholds
}

algorithm check_MUCTPISLTiming {
  libname = libdqm_algorithms.so
  name = MUCTPISLTiming
  thresh = 0.4
  MinStat = 5000
}

algorithm check_MUCTPISLAnyHit {
  libname = libdqm_algorithms.so
  name = MUCTPISLAnyHit
  thresh = 0.1
}

algorithm MUCTPI_Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
}

algorithm MUCTPI_Kolmogorov {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_MaxDist
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  thresholds = MUCTPI_KolmogorovThr
  MinStat = 20
}

#############
# Thresholds
#############

thresholds errorSummary_Thresholds {
  limits NBins {
    warning = 0
    error = 1
  }
}

thresholds MUCTPI_KolmogorovThr {
  limits MaxDist {
    warning = 0.45
    error = 0.5
  }
}


