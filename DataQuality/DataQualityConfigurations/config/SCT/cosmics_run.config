# **********************************************************************
# $Id: cosmics_run.config 796786 2017-02-12 19:58:46Z shonda $
# **********************************************************************

############################################################
# SCT
############################################################

#############
# Output
#############

output top_level {
	##Un-comment for stand alone testing
	#algorithm = SCT_WorstCaseSummary

	output InnerDetector {
		output SCT {
		       output Summary {
			      output BSErrVsLBs {
			      	      output RODLevel {
				      }
			      	      output LinkLevel {
			      	      	     output DetailedABCDErrors {
				      	     }
				      }
			      }
			      output Detail {
			       	     output RatioNoiseOccupancy {
				     }
			      }
		       }
			output _SCTB {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
				      }
				      output Layer0 {
				      }
				      output Layer1 {
				      }
				      output Layer2 {
				      }
				      output Layer3 {
				      }
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output _SCTB_Detail {
				      output TBinTracks {
				      }
							output Lorentz {
							}
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      }
				}
			}
			output _SCTEA {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
				      }
				      output Disk0 {
				      }
				      output Disk1 {
				      }
				      output Disk2 {
				      }
				      output Disk3 {
				      }
				      output Disk4 {
				      }
				      output Disk5 {
				      }
				      output Disk6 {
				      }
				      output Disk7 {
				      }
				      output Disk8 {
				      }
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output _SCTEA_Detail {
				      output TBinTracks {
				      }
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      }
				}
			}
			output _SCTEC {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
				      }
				      output Disk0 {
				      }
				      output Disk1 {
				      }
				      output Disk2 {
				      }
				      output Disk3 {
				      }
				      output Disk4 {
				      }
				      output Disk5 {
				      }
				      output Disk6 {
				      }
				      output Disk7 {
				      }
				      output Disk8 {
				      }
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output _SCTEC_Detail {
				      output TBinTracks {
				      }
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      }
				}
			}
		}
	}
}

#######################
# Histogram Assessments
#######################

dir SCT {
	##Reference for directory structures
	reference = CentrallyManagedReferences

	##Default algorithm
	algorithm = SCT_GatherData

	dir GENERAL/Conf {
		hist SCTConfNew {
			algorithm = SCT_ModuleStatus_Test
			output = InnerDetector/SCT/Summary
		}
		hist SCTConfOutM {
			algorithm = SCT_OutModuleStatus_Test
			output = InnerDetector/SCT/Summary
		}
		hist SCT_ABCDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_BCIDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_ByteStreamParseErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_FormatterErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_LVL1IDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCTMaskedLinkLinkVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedLinkVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		hist SCT_MaskedRODVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_MissingLinkLevelErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_PreambleErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_ROBFragmentErrorVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_RODClockErrorVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_RawErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_TimeOutErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_TruncatedRODVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
                hist NumberOfEventsVsLB {
			#algorithm = SCT_NumEvents_Test
			output = InnerDetector/SCT/Summary
                }
                hist NumberOfSCTFlagErrorsVsLB {
			#algorithm = SCT_SCTFlag_Test
			output = InnerDetector/SCT/Summary/Detail
                }
                hist FractionOfSCTFlagErrorsPerLB {
			algorithm = SCT_SCTFlag_Test
			output = InnerDetector/SCT/Summary
                }
		hist SCTConfDetails {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		hist SCT_ABCDError_Chip0VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Chip1VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Chip2VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Chip3VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Chip4VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Chip5VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Error1VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Error2VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_ABCDError_Error4VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
		hist SCT_LinksWithABCDError_Chip0VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel/DetailedABCDErrors
		}
	}

	dir GENERAL/tracks {
		hist trackTriggersRate {
			algorithm = SCT_BinPrint
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist SCTTrackRate {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		hist tracksPerRegion {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary
		}
		hist totalBarrelResidual {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalBarrelPull {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapAResidual {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapAPull {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapCResidual {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapCPull {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist trk_pt {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_chi2 {
			algorithm = SCT_Chi2_KSTest
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_phi {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_eta {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_z0 {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_d0 {
			algorithm = SCT_Histogram_Not_Empty
			display = AxisRange(-20,20,"X")
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_sct_hits {
			##TODO: SCT Odd/Even hit ratio
			##TODO: Hits above & below natural (cosmics or collisions) threshold
			algorithm = SCT_Histogram_WithRef
			output = InnerDetector/SCT/Summary
		}
	}

	dir GENERAL/hits {
		output = InnerDetector/SCT/Summary/Detail
		##NOTE: all vs_en histograms are empty
		hist clu_size {
			algorithm = SCT_GatherData
			display = LogY
		}
	}

	dir GENERAL/eff {
		output = InnerDetector/SCT/Summary
		##NOTE: all vs_en histograms are empty
		hist SctTotalEff {
			##algorithm = SCT_BinPrint
			algorithm = SCT_SumEff_Total
			display = AxisRange(0.95,1.009,"Y")
		}
		hist SctTotalEffBCID {
			##algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary
			algorithm = SCT_SumEff_TotalFBCID
			display = AxisRange(0.95,1.009,"Y")
		}
	}

	dir GENERAL/lorentz {
		output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Lorentz
		hist all_in_dir {
		}
	}

	dir GENERAL/tbin {
	    	hist TBinFracAll {
		     	output = InnerDetector/SCT/Summary
		}
	}

	dir GENERAL/RatioNoise {
		hist h_NO {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
		hist h_NOb {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
		hist h_NOEC {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
        }

	dir SCTB/RatioNoise {
		hist h_NOb_layer0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
	}

	dir SCTB/Conf {
		hist modulemapB0_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB0_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB1_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB1_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB2_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB2_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB3_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB3_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
	}
	dir SCTEA/Conf {
		hist modulemapEA0_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA0_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA1_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA1_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA2_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA2_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA3_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA3_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA4_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA4_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA5_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA5_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA6_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA6_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA7_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA7_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA8_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA8_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
	}
	dir SCTEC/Conf {
		hist modulemapEC0_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC0_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC1_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC1_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC2_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC2_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC3_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC3_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC4_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC4_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC5_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC5_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC6_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC6_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC7_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC7_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC8_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC8_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
	}

	dir SCTB/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeff {
			algorithm = SCT_SumEff_Barrel
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist summaryeffBCID {
			algorithm = SCT_SumEff_Barrel
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency/EffVsLBs
                }
		hist eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist ineff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
	}
	dir SCTB/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTB/Efficiency/EffVsLBs
		hist eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}
	dir SCTEA/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeffp {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist summaryeffpBCID {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency/EffVsLBs
                }
		hist p_eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist ineffp_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
	}
	dir SCTEA/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTEA/Efficiency/EffVsLBs
		hist p_eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_4_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_4_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_5_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_5_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_6_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_6_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_7_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_7_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_8_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_8_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}
	dir SCTEC/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeffm {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist summaryeffmBCID {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency/EffVsLBs
                }
		hist m_eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist ineffm_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
	}
	dir SCTEC/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTEC/Efficiency/EffVsLBs
		hist m_eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_4_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_4_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_5_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_5_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_6_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_6_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_7_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_7_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_8_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_8_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}

	dir SCTB/errors {
		algorithm = SCT_AnyErr
#		hist ABCDErrs_0_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0
#		}
#		hist ABCDErrs_0_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0
#		}
#		hist ABCDErrs_1_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1
#		}
#		hist ABCDErrs_1_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1
#		}
#		hist ABCDErrs_2_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2
#		}
#		hist ABCDErrs_2_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2
#		}
#		hist ABCDErrs_3_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3
#		}
#		hist ABCDErrs_3_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3
#		}

#		hist BSParseErrs_0_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0
#		}
#		hist BSParseErrs_0_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0
#		}
#		hist BSParseErrs_1_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1
#		}
#		hist BSParseErrs_1_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1
#		}
#		hist BSParseErrs_2_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2
#		}
#		hist BSParseErrs_2_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2
#		}
#		hist BSParseErrs_3_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3
#		}
#		hist BSParseErrs_3_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3
#		}
		dir BCIDError {
			hist SCT_NumberOfBCIDErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfBCIDErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfBCIDErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfBCIDErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfBCIDErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfBCIDErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfBCIDErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_NumberOfBCIDErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir LVL1IDError {
		    	hist SCT_NumberOfLVL1IDErrorB_0_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfLVL1IDErrorB_0_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfLVL1IDErrorB_1_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfLVL1IDErrorB_1_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfLVL1IDErrorB_2_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfLVL1IDErrorB_2_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfLVL1IDErrorB_3_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_NumberOfLVL1IDErrorB_3_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir ROBFragmentError {
		    	hist SCT_NumberOfROBFragmentErrorB_0_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfROBFragmentErrorB_0_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfROBFragmentErrorB_1_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfROBFragmentErrorB_1_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfROBFragmentErrorB_2_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfROBFragmentErrorB_2_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfROBFragmentErrorB_3_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_NumberOfROBFragmentErrorB_3_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
#		dir RODClock {
#		    	hist RODClockErrs_0_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0_0
#			}
#			hist RODClockErrs_0_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0_1
#			}
#			hist RODClockErrs_1_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1_0
#			}
#			hist RODClockErrs_1_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1_1
#			}
#			hist RODClockErrs_2_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2_0
#			}
#			hist RODClockErrs_2_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2_1
#			}
#			hist RODClockErrs_3_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3_0
#			}
#			hist RODClockErrs_3_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3_1
#			}
#		}
#		hist RawErrs_0_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0_0
#		}
#		hist RawErrs_0_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer0_1
#		}
#		hist RawErrs_1_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1_0
#		}
#		hist RawErrs_1_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer1_1
#		}
#		hist RawErrs_2_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2_0
#		}
#		hist RawErrs_2_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer2_1
#		}
#		hist RawErrs_3_0 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3_0
#		}
#		hist RawErrs_3_1 {
#			output = InnerDetector/SCT/_SCTB/Errors/Layer3_1
#		}
		dir TimeOutError {
			hist SCT_NumberOfTimeOutErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfTimeOutErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfTimeOutErrorB_1_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfTimeOutErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfTimeOutErrorB_2_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfTimeOutErrorB_2_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfTimeOutErrorB_3_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_NumberOfTimeOutErrorB_3_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
 		}
#		dir TruncROD {
#		    	hist TruncROD_0_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0_0
#			}
#			hist TruncROD_0_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Laye0_1
#			}
#			hist TruncROD_1_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1_0
#			}
#			hist TruncROD_1_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1_1
#			}
#			hist TruncROD_2_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2_0
#			}
#			hist TruncROD_2_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2_1
#			}
#			hist TruncROD_3_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3_0
#			}
#			hist TruncROD_3_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3_1
#			}
#		}
#		dir Formatter {
#		    	hist FormatterErrs_0_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0_0
#			}
#			hist FormatterErrs_0_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
#			}
#			hist FormatterErrs_1_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
#			}
#			hist FormatterErrs_1_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
#			}
#			hist FormatterErrs_2_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
#			}
#			hist FormatterErrs_2_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
#			}
#			hist FormatterErrs_3_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
#			}
#			hist FormatterErrs_3_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
#			}
#		}
		dir MaskedLink {
		    	hist SCT_NumberOfMaskedLinkB_0_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_0_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_1_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_1_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_2_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_2_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_3_0 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			     algorithm = SCT_BinPrint
			}
			hist SCT_NumberOfMaskedLinkB_3_1 {
			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
			     algorithm = SCT_BinPrint
			}
		}
#		dir Preamble {
#		    	hist PreambleErrs_0_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
#			}
#			hist PreambleErrs_0_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer0
#			}
#			hist PreambleErrs_1_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
#			}
#			hist PreambleErrs_1_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer1
#			}
#			hist PreambleErrs_2_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
#			}
#			hist PreambleErrs_2_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer2
#			}
#			hist PreambleErrs_3_0 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
#			}
#			hist PreambleErrs_3_1 {
#			     output = InnerDetector/SCT/_SCTB/Errors/Layer3
#			}
#		}
		dir MissingLinkHeaderError {
             	   	hist MissingLinkErrs_0_0 {
                	     output = InnerDetector/SCT/_SCTB/Errors/Layer0
               		 }
        	        hist MissingLinkErrs_0_1 {
               		     output = InnerDetector/SCT/_SCTB/Errors/Layer0
               		 }
             	   	hist MissingLinkErrs_1_0 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer1
                	}
                	hist MissingLinkErrs_1_1 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer1
                	}
                	hist MissingLinkErrs_2_0 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer2
                	}
                	hist MissingLinkErrs_2_1 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer2
                	}
                	hist MissingLinkErrs_3_0 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer3
                	}
                	hist MissingLinkErrs_3_1 {
                        	output = InnerDetector/SCT/_SCTB/Errors/Layer3
                	}
               	}
		hist summaryErrs_0_0 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_0_1 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_1_0 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_1_1 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_2_0 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_2_1 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_3_0 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrs_3_1 {
			output = InnerDetector/SCT/_SCTB/Errors
			algorithm = SCT_SumErr
		}
	}
	dir SCTEA/errors {
		output = InnerDetector/SCT/_SCTEA/Errors
		algorithm = SCT_AnyErr

#		hist ABCDErrsECp_0_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist ABCDErrsECp_0_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist ABCDErrsECp_1_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist ABCDErrsECp_1_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist ABCDErrsECp_2_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist ABCDErrsECp_2_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist ABCDErrsECp_3_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist ABCDErrsECp_3_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist ABCDErrsECp_4_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist ABCDErrsECp_4_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist ABCDErrsECp_5_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist ABCDErrsECp_5_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist ABCDErrsECp_6_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist ABCDErrsECp_6_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist ABCDErrsECp_7_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist ABCDErrsECp_7_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist ABCDErrsECp_8_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}
#		hist ABCDErrsECp_8_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}

#		hist BSParseErrsECp_0_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist BSParseErrsECp_0_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist BSParseErrsECp_1_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist BSParseErrsECp_1_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist BSParseErrsECp_2_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist BSParseErrsECp_2_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist BSParseErrsECp_3_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist BSParseErrsECp_3_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist BSParseErrsECp_4_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist BSParseErrsECp_4_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist BSParseErrsECp_5_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist BSParseErrsECp_5_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist BSParseErrsECp_6_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist BSParseErrsECp_6_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist BSParseErrsECp_7_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist BSParseErrsECp_7_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist BSParseErrsECp_8_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}
#		hist BSParseErrsECp_8_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}
		dir BCIDError {
		    	hist SCT_NumberOfBCIDErrorEA_0_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfBCIDErrorEA_0_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfBCIDErrorEA_1_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfBCIDErrorEA_1_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfBCIDErrorEA_2_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfBCIDErrorEA_2_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfBCIDErrorEA_3_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfBCIDErrorEA_3_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfBCIDErrorEA_4_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfBCIDErrorEA_4_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfBCIDErrorEA_5_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfBCIDErrorEA_5_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfBCIDErrorEA_6_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfBCIDErrorEA_6_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfBCIDErrorEA_7_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfBCIDErrorEA_7_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfBCIDErrorEA_8_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfBCIDErrorEA_8_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir LVL1IDError {
		    	hist SCT_NumberOfLVL1IDErrorEA_0_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfLVL1IDErrorEA_0_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfLVL1IDErrorEA_1_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfLVL1IDErrorEA_1_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfLVL1IDErrorEA_2_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfLVL1IDErrorEA_2_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfLVL1IDErrorEA_3_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfLVL1IDErrorEA_3_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfLVL1IDErrorEA_4_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfLVL1IDErrorEA_4_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfLVL1IDErrorEA_5_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfLVL1IDErrorEA_5_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfLVL1IDErrorEA_6_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfLVL1IDErrorEA_6_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfLVL1IDErrorEA_7_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfLVL1IDErrorEA_7_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfLVL1IDErrorEA_8_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfLVL1IDErrorEA_8_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir ROBFragmentError {
		    	hist SCT_NumberOfROBFragmentErrorEA_0_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfROBFragmentErrorEA_0_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfROBFragmentErrorEA_1_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfROBFragmentErrorEA_1_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfROBFragmentErrorEA_2_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfROBFragmentErrorEA_2_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfROBFragmentErrorEA_3_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfROBFragmentErrorEA_3_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfROBFragmentErrorEA_4_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfROBFragmentErrorEA_4_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfROBFragmentErrorEA_5_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfROBFragmentErrorEA_5_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfROBFragmentErrorEA_6_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfROBFragmentErrorEA_6_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfROBFragmentErrorEA_7_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfROBFragmentErrorEA_7_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfROBFragmentErrorEA_8_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfROBFragmentErrorEA_8_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
#		dir RODClock {
#		    	hist RODClockErrsECp_0_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist RODClockErrsECp_0_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist RODClockErrsECp_1_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist RODClockErrsECp_1_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist RODClockErrsECp_2_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist RODClockErrsECp_2_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist RODClockErrsECp_3_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist RODClockErrsECp_3_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist RODClockErrsECp_4_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist RODClockErrsECp_4_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist RODClockErrsECp_5_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist RODClockErrsECp_5_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist RODClockErrsECp_6_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist RODClockErrsECp_6_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist RODClockErrsECp_7_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist RODClockErrsECp_7_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist RODClockErrsECp_8_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#			hist RODClockErrsECp_8_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#		}
#		hist RawErrsECp_0_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist RawErrsECp_0_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#		}
#		hist RawErrsECp_1_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist RawErrsECp_1_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#		}
#		hist RawErrsECp_2_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist RawErrsECp_2_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#		}
#		hist RawErrsECp_3_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist RawErrsECp_3_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#		}
#		hist RawErrsECp_4_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist RawErrsECp_4_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#		}
#		hist RawErrsECp_5_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist RawErrsECp_5_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#		}
#		hist RawErrsECp_6_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist RawErrsECp_6_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#		}
#		hist RawErrsECp_7_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist RawErrsECp_7_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#		}
#		hist RawErrsECp_8_0 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}
#		hist RawErrsECp_8_1 {
#			output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#		}
		dir TimeOutError {
			hist SCT_NumberOfTimeOutErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfTimeOutErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfTimeOutErrorEA_1_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfTimeOutErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfTimeOutErrorEA_2_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfTimeOutErrorEA_2_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfTimeOutErrorEA_3_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfTimeOutErrorEA_3_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfTimeOutErrorEA_4_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfTimeOutErrorEA_4_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfTimeOutErrorEA_5_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfTimeOutErrorEA_5_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfTimeOutErrorEA_6_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfTimeOutErrorEA_6_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfTimeOutErrorEA_7_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfTimeOutErrorEA_7_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfTimeOutErrorEA_8_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfTimeOutErrorEA_8_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
#		dir TruncROD {
#		    	hist TruncRODECp_0_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist TruncRODECp_0_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist TruncRODECp_1_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist TruncRODECp_1_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist TruncRODECp_2_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist TruncRODECp_2_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist TruncRODECp_3_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist TruncRODECp_3_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist TruncRODECp_4_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist TruncRODECp_4_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist TruncRODECp_5_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist TruncRODECp_5_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist TruncRODECp_6_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist TruncRODECp_6_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist TruncRODECp_7_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist TruncRODECp_7_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist TruncRODECp_8_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#			hist TruncRODECp_8_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#		}
#		dir Formatter {
#		    	hist FormatterErrsECp_0_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist FormatterErrsECp_0_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist FormatterErrsECp_1_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist FormatterErrsECp_1_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist FormatterErrsECp_2_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist FormatterErrsECp_2_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist FormatterErrsECp_3_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist FormatterErrsECp_3_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist FormatterErrsECp_4_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist FormatterErrsECp_4_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist FormatterErrsECp_5_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist FormatterErrsECp_5_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist FormatterErrsECp_6_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist FormatterErrsECp_6_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist FormatterErrsECp_7_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist FormatterErrsECp_7_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist FormatterErrsECp_8_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#			hist FormatterErrsECp_8_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#		}
		dir MaskedLink {
		    	hist SCT_NumberOfMaskedLinkEA_0_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkEA_0_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkEA_1_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkEA_1_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkEA_2_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkEA_2_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkEA_3_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkEA_3_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkEA_4_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkEA_4_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkEA_5_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkEA_5_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkEA_6_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkEA_6_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkEA_7_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkEA_7_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkEA_8_0 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfMaskedLinkEA_8_1 {
			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
#		dir Preamble {
#		    	hist PreambleErrsECp_0_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist PreambleErrsECp_0_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk0
#			}
#			hist PreambleErrsECp_1_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist PreambleErrsECp_1_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk1
#			}
#			hist PreambleErrsECp_2_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist PreambleErrsECp_2_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk2
#			}
#			hist PreambleErrsECp_3_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist PreambleErrsECp_3_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk3
#			}
#			hist PreambleErrsECp_4_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist PreambleErrsECp_4_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk4
#			}
#			hist PreambleErrsECp_5_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist PreambleErrsECp_5_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk5
#			}
#			hist PreambleErrsECp_6_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist PreambleErrsECp_6_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk6
#			}
#			hist PreambleErrsECp_7_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist PreambleErrsECp_7_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk7
#			}
#			hist PreambleErrsECp_8_0 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#			hist PreambleErrsECp_8_1 {
#			     output = InnerDetector/SCT/_SCTEA/Errors/Disk8
#			}
#		}
		dir MissingLinkHeaderError {
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_0_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk0
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_0_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk0
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_1_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_1_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_2_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_2_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_3_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_3_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_4_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_4_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_5_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_5_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_6_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_6_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_7_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_7_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_8_0 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEA_8_1 {
                        	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
                	}
		}
		hist summaryErrsECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/Errors
			algorithm = SCT_SumErr
		}
	}
	dir SCTEC/errors {
		output = InnerDetector/SCT/_SCTEC/Errors
		algorithm = SCT_AnyErr

#		hist ABCDErrsECm_0_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist ABCDErrsECm_0_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist ABCDErrsECm_1_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist ABCDErrsECm_1_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist ABCDErrsECm_2_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist ABCDErrsECm_2_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist ABCDErrsECm_3_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist ABCDErrsECm_3_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist ABCDErrsECm_4_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist ABCDErrsECm_4_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist ABCDErrsECm_5_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist ABCDErrsECm_5_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist ABCDErrsECm_6_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist ABCDErrsECm_6_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist ABCDErrsECm_7_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist ABCDErrsECm_7_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist ABCDErrsECm_8_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}
#		hist ABCDErrsECm_8_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}

#		hist BSParseErrsECm_0_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist BSParseErrsECm_0_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist BSParseErrsECm_1_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist BSParseErrsECm_1_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist BSParseErrsECm_2_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist BSParseErrsECm_2_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist BSParseErrsECm_3_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist BSParseErrsECm_3_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist BSParseErrsECm_4_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist BSParseErrsECm_4_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist BSParseErrsECm_5_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist BSParseErrsECm_5_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist BSParseErrsECm_6_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist BSParseErrsECm_6_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist BSParseErrsECm_7_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist BSParseErrsECm_7_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist BSParseErrsECm_8_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}
#		hist BSParseErrsECm_8_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}
		dir BCIDError {
		    	hist SCT_NumberOfBCIDErrorEC_0_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfBCIDErrorEC_0_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfBCIDErrorEC_1_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfBCIDErrorEC_1_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfBCIDErrorEC_2_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfBCIDErrorEC_2_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfBCIDErrorEC_3_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfBCIDErrorEC_3_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfBCIDErrorEC_4_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfBCIDErrorEC_4_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfBCIDErrorEC_5_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfBCIDErrorEC_5_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfBCIDErrorEC_6_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfBCIDErrorEC_6_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfBCIDErrorEC_7_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfBCIDErrorEC_7_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfBCIDErrorEC_8_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfBCIDErrorEC_8_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir LVL1IDError {
		    	hist SCT_NumberOfLVL1IDErrorEC_0_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfLVL1IDErrorEC_0_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfLVL1IDErrorEC_1_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfLVL1IDErrorEC_1_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfLVL1IDErrorEC_2_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfLVL1IDErrorEC_2_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfLVL1IDErrorEC_3_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfLVL1IDErrorEC_3_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfLVL1IDErrorEC_4_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfLVL1IDErrorEC_4_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfLVL1IDErrorEC_5_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfLVL1IDErrorEC_5_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfLVL1IDErrorEC_6_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfLVL1IDErrorEC_6_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfLVL1IDErrorEC_7_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfLVL1IDErrorEC_7_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfLVL1IDErrorEC_8_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfLVL1IDErrorEC_8_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir MaskedLink {
		    	hist SCT_NumberOfMaskedLinkEC_0_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkEC_0_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkEC_1_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkEC_1_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkEC_2_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkEC_2_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkEC_3_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkEC_3_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkEC_4_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkEC_4_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkEC_5_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkEC_5_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkEC_6_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkEC_6_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkEC_7_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkEC_7_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkEC_8_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfMaskedLinkEC_8_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir ROBFragmentError {
		    	hist SCT_NumberOfROBFragmentErrorEC_0_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfROBFragmentErrorEC_0_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfROBFragmentErrorEC_1_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfROBFragmentErrorEC_1_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfROBFragmentErrorEC_2_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfROBFragmentErrorEC_2_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfROBFragmentErrorEC_3_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfROBFragmentErrorEC_3_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfROBFragmentErrorEC_4_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfROBFragmentErrorEC_4_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfROBFragmentErrorEC_5_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfROBFragmentErrorEC_5_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfROBFragmentErrorEC_6_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfROBFragmentErrorEC_6_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfROBFragmentErrorEC_7_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfROBFragmentErrorEC_7_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfROBFragmentErrorEC_8_0 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfROBFragmentErrorEC_8_1 {
			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
#		dir RODClock {
#		    	hist RODClockErrsECm_0_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist RODClockErrsECm_0_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist RODClockErrsECm_1_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist RODClockErrsECm_1_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist RODClockErrsECm_2_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist RODClockErrsECm_2_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist RODClockErrsECm_3_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist RODClockErrsECm_3_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist RODClockErrsECm_4_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist RODClockErrsECm_4_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist RODClockErrsECm_5_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist RODClockErrsECm_5_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist RODClockErrsECm_6_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist RODClockErrsECm_6_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist RODClockErrsECm_7_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist RODClockErrsECm_7_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist RODClockErrsECm_8_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#			hist RODClockErrsECm_8_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#		}
#		hist RawErrsECm_0_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist RawErrsECm_0_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#		}
#		hist RawErrsECm_1_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist RawErrsECm_1_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#		}
#		hist RawErrsECm_2_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist RawErrsECm_2_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#		}
#		hist RawErrsECm_3_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist RawErrsECm_3_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#		}
#		hist RawErrsECm_4_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist RawErrsECm_4_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#		}
#		hist RawErrsECm_5_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist RawErrsECm_5_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#		}
#		hist RawErrsECm_6_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist RawErrsECm_6_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#		}
#		hist RawErrsECm_7_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist RawErrsECm_7_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#		}
#		hist RawErrsECm_8_0 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}
#		hist RawErrsECm_8_1 {
#			output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#		}
		dir TimeOutError {
			hist SCT_NumberOfTimeOutErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfTimeOutErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfTimeOutErrorEC_1_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfTimeOutErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfTimeOutErrorEC_2_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfTimeOutErrorEC_2_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfTimeOutErrorEC_3_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfTimeOutErrorEC_3_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfTimeOutErrorEC_4_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfTimeOutErrorEC_4_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfTimeOutErrorEC_5_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfTimeOutErrorEC_5_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfTimeOutErrorEC_6_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfTimeOutErrorEC_6_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfTimeOutErrorEC_7_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfTimeOutErrorEC_7_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfTimeOutErrorEC_8_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfTimeOutErrorEC_8_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
#		dir TruncROD {
#		    	hist TruncRODECm_0_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist TruncRODECm_0_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist TruncRODECm_1_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist TruncRODECm_1_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist TruncRODECm_2_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist TruncRODECm_2_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist TruncRODECm_3_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist TruncRODECm_3_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist TruncRODECm_4_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist TruncRODECm_4_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist TruncRODECm_5_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist TruncRODECm_5_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist TruncRODECm_6_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist TruncRODECm_6_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist TruncRODECm_7_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist TruncRODECm_7_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist TruncRODECm_8_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#			hist TruncRODECm_8_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#		}
#		dir Formatter {
#		    	hist FormatterErrsECm_0_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist FormatterErrsECm_0_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist FormatterErrsECm_1_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist FormatterErrsECm_1_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist FormatterErrsECm_2_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist FormatterErrsECm_2_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist FormatterErrsECm_3_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist FormatterErrsECm_3_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist FormatterErrsECm_4_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist FormatterErrsECm_4_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist FormatterErrsECm_5_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist FormatterErrsECm_5_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist FormatterErrsECm_6_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist FormatterErrsECm_6_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist FormatterErrsECm_7_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist FormatterErrsECm_7_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist FormatterErrsECm_8_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#			hist FormatterErrsECm_8_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#		}
#		dir Preamble {
#		    	hist PreambleErrsECm_0_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist PreambleErrsECm_0_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk0
#			}
#			hist PreambleErrsECm_1_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist PreambleErrsECm_1_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk1
#			}
#			hist PreambleErrsECm_2_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist PreambleErrsECm_2_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk2
#			}
#			hist PreambleErrsECm_3_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist PreambleErrsECm_3_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk3
#			}
#			hist PreambleErrsECm_4_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist PreambleErrsECm_4_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk4
#			}
#			hist PreambleErrsECm_5_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist PreambleErrsECm_5_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk5
#			}
#			hist PreambleErrsECm_6_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist PreambleErrsECm_6_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk6
#			}
#			hist PreambleErrsECm_7_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist PreambleErrsECm_7_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk7
#			}
#			hist PreambleErrsECm_8_0 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#			hist PreambleErrsECm_8_1 {
#			     output = InnerDetector/SCT/_SCTEC/Errors/Disk8
#			}
#		}
		dir MissingLinkHeaderError {
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_0_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk0
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_0_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk0
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_1_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_1_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_2_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_2_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_3_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_3_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_4_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_4_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_5_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_5_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_6_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
                	}	
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_6_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_7_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_7_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_8_0 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
                	}
                	hist SCT_NumberOfMissingLinkHeaderErrorEC_8_1 {
                        	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
                	}
		}
		hist summaryErrsECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
		hist summaryErrsECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/Errors
			algorithm = SCT_SumErr
		}
	}

	dir SCTB/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapBar_0 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_1 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_2 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_3 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEA/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapECA_0 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_1 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_2 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_3 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_4 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_5 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_6 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_7 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_8 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist h_NOECA_disk0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk4 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk5 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk6 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk7 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk8 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
	}

	dir SCTEC/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapECC_0 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_1 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_2 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_3 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_4 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_5 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_6 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_7 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_8 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist h_NOECC_disk0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk4 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk5 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk6 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk7 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk8 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
	}

	##NOTE: A second call to the same directory will yield a failure - 20 Aug 2009
	##Outputs must be specified for histograms individually
	dir SCTB/hits {
		## Hit Maps
		hist hitsmap_0_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_0_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_1_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_1_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_2_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_2_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_3_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_3_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}

	}
	dir SCTEA/hits {
		## Hit Maps
		hist hitsmapECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}

	}
	dir SCTEC/hits {
		## Hit Maps
		hist hitsmapECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}

	}

	dir SCTB/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBin_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_2 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_3 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TBinFrac_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
	}
	dir SCTEA/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBinECp_0 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_1 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_2 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_3 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_4 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_5 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_6 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_7 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_8 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
			display = LogY
		}
		hist TBinFracEA_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
	}
	dir SCTEC/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBinECm_0 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_1 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_2 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_3 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_4 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_5 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_6 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_7 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_8 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
	}

	dir SCTB/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracks_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
	}

	dir SCTEA/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracksECp_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_4_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_4_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_5_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_5_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_6_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_6_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_7_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_7_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_8_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_8_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
	}

	dir SCTEC/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracksECm_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_4_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_4_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_5_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_5_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_6_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_6_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_7_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_7_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_8_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_8_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
	}
}


#############
# Algorithms
#############

## Generic Algorithms

#algorithm SCT_WorstCaseSummary { ##Used for stand-alone testing only
#	libname = libdqm_summaries.so
#	name = WorstCaseSummary
#}

algorithm SCT_CorrectableSummary { ##Used for stand-alone testing only
	libname = libdqm_summaries.so
	name = WorstCaseYellow
}

algorithm SCT_Histogram_Not_Empty { ##Used for 1st and 2nd Hit errors, efficiency maps, hit maps
	libname = libdqm_algorithms.so
	name = Histogram_Not_Empty
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_Histogram_WithRef { ##Used for 1st and 2nd Hit errors, efficiency maps, hit maps
	libname = libdqm_algorithms.so
	name = GatherData
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_BinPrint { ##Used for SCTTrackRate, InnerDetector/SCT/SCT<All,B,EA,EC>/ModuleStatus
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 10 ##Print at most 10 entries
}

algorithm SCT_GatherData { ##Used for TrackHitMaps, Flags
	libname = libdqm_algorithms.so
	name = GatherData
	## USE NO REFERENCE
	## This algorithm is a useful placeholder
	## until some specific algorithm can be applied
}

algorithm SCT_GatherData_Ref { ##Used for TrackHitMaps, Flags
	libname = libdqm_algorithms.so
	name = GatherData
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

## Specific Algorithms

 algorithm SCT_ModuleStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 10 ##Print at most 10 entries
	 Publish = 6 ##Print all bins
	 TypePublish = 2 ##Print Values
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
	 thresholds = SCT_ModuleStatus_Threshold
	 reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
 }


 algorithm SCT_OutModuleStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 10 ##Print at most 10 entries
	 Publish = 6 ##Print all bins
	 TypePublish = 2 ##Print Values
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
	 thresholds = SCT_OutModuleStatus_Threshold
	 reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
 }

 algorithm SCT_RODStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 2000 ##Print at most 100 entries
	 Publish = 2000
	 TypePublish = 1 ##Warnings and Errors
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
         thresholds = SCT_RODStatus_Threshold
 }

 algorithm SCT_RODStatusCheck_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 2000 ##Print at most 100 entries
	 Publish = 2000
	 TypePublish = 1 ##Warnings and Errors
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
         thresholds = SCT_RODStatusCheck_Threshold
 }

 algorithm SCT_LinkStatus_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = 2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_LinkStatus_Threshold
}

algorithm SCT_NumEvents_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = -2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_NumEvents_Threshold
}

algorithm SCT_SCTFlag_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = 2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_SCTFlag_Threshold
}

algorithm SCT_Chi2_KSTest {
	libname = libdqm_algorithms.so
	name = KolmogorovTest_MaxDist
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Chi2_KSTest_Thresh
	MinStat = 500
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_ClusterSize_KSTest {
	libname = libdqm_algorithms.so
	name = KolmogorovTest_MaxDist
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_ClusterSize_KSTest_Thresh
	MinStat = 500
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

#algorithm SCT_TBin_AnyHit {
#	reference = CentrallyManagedReferences
#	libname = libdqm_algorithms.so
#	name = BinThresh
#	Publish = 1
#	TypePublish = 1 ##Print Warnings
#	UseValue = -2 ##less than thresholds
#	TypeValue = 2 ##Use fraction of all entries
#	thresholds = SCT_TBin_AnyHit_Thresh
#	##Check bins (001~2), (010~3), (100~5)
#	Mask_1 = 1
#	Mask_4 = 1
#	Mask_6 = 1
#	Mask_7 = 1
#	Mask_8 = 1
#}

##Use custom Algorithm to print SCT timing characterizations
##Summary yields warning if there are any entries in 000
compositeAlgorithm SCT_TBinTrack_CompAlg { ##Include Hit Time measures
	libnames = libdqm_algorithms.so
	subalgs = BinThresh,SCTTrackTiming
}
#algorithm SCT_TBinTrack {
#	reference = CentrallyManagedReferences
#	name = SCT_TBinTrack_CompAlg
#	Publish = 3
#	TypePublish = 1 ##Print Warnings
#	UseValue = 2 ##Greater than thresholds
#	TypeValue = 1 ##Total entries in bin (should be integer)
#	thresholds = SCT_TBinTrack_Thresh
#}

##Only Print noisy modules
algorithm SCT_Noise {
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 10 ##Print at most 10 entries
	UseValue = 2 ##Print out noise for all bins above threshold
	TypeValue = 0 ##Bins entries are occupancies
	Value = 150 ##Units?
}
##Worst Case Summary of warning & error levels for each module
#algorithm SCT_Noise {
#  libname = libdqm_algorithms.so
#  name = BinThresh
#  UseValue = 2 ##Thresholds are occupancies
#  TypeValue = 0
#  Publish = 6 ##List at most 6
#  TypePublish = 0 ##Only list errors
#  thresholds = SCT_Noise_Thresh
#}

##List bins with non-zero Errors
algorithm SCT_AnyErr { ##Used for individual error types
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 24 ##Print at most 2 full SBC's errors
	UseValue = 2
	TypeValue = 0
	Value = 0.0
}
##PROBLEM: Attempting to combine BinPrint with Bins_GreaterThan_Threshold yields no check or printout!
##Set Summary by number of modules with errors
algorithm SCT_SumErr { ##Used for error summary
	libname = libdqm_algorithms.so
	name = Bins_GreaterThan_Threshold
	BinThreshold = 0.7 ##Count all modules with errors in more that 70% of events
	thresholds = SCT_SumErrThreshold
}

##Check RMS, display mean
compositeAlgorithm SCT_TrackResidual_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = CheckHisto_RMS,GatherData
}
#algorithm SCT_Barrel_TrackResidual {
#	name = SCT_TrackResidual_CompAlg
#	thresholds = SCT_Barrel_TrackResidual_Thresh_RMS_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}
#algorithm SCT_EndCap_TrackResidual {
#	name = SCT_TrackResidual_CompAlg
#	thresholds = SCT_EndCap_TrackResidual_Thresh_RMS_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}

##Look for changes, print mean & variance
compositeAlgorithm SCT_TrackResidual_KSTest_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = KolmogorovTest_MaxDist,GatherData
}
algorithm SCT_Barrel_TrackResidual_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Barrel_TrackResidual_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_Barrel_TrackPull_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Barrel_TrackPull_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_EndCap_TrackResidual_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_EndCap_TrackResidual_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_EndCap_TrackPull_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_EndCap_TrackPull_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}

##Check Mean, display RMS
compositeAlgorithm SCT_TrackPull_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = CheckHisto_Mean,GatherData
}
#algorithm SCT_Barrel_TrackPull {
#	name = SCT_TrackPull_CompAlg
#	thresholds = SCT_Barrel_TrackPull_Thresh_Mean_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}
#algorithm SCT_EndCap_TrackPull {
#	name = SCT_TrackPull_CompAlg
#	thresholds = SCT_EndCap_TrackPull_Thresh_Mean_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}

##List Modules with low efficiency
algorithm SCT_HitEff {
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 24 ##Print at most 2 full SBC's errors
	UseValue = -2
	Value = 0.9
	UseMaskValue = -1
	MaskValue = 0.
	TypeValue = 0 ##Efficiency Fractions
}

##Set Summary by number of layers below threshold
#compositeAlgorithm SCT_Eff_CompAlg {
#  libnames = libdqm_algorithms.so
#  subalgs = Bins_LessThan_Threshold,BinPrint
#}
#algorithm SCT_SumEff_Barrel {
#  name = SCT_Eff_CompAlg
#  UnMask_All = 8 ##Print All
#  BinThreshold = 0.98
#  MinStat = 100
#  thresholds = SCT_SumEffThreshold_Barrel
#  reference = CentrallyManagedReferences
#}
#algorithm SCT_SumEff_EndCap {
#  name = SCT_Eff_CompAlg
#  UnMask_All = 18 ##Print All
#  BinThreshold = 0.80
#  MinStat = 100
#  thresholds = SCT_SumEffThreshold_EndCap
#  reference = CentrallyManagedReferences
#}

##Compare bin contents to thresholds.
##Print all bin contents & average of all bins
compositeAlgorithm SCT_SumEff_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = BinThresh,AveragePrint
}
algorithm SCT_EffVsLB {
	name = SCT_SumEff_CompAlg
	Publish = 2000 ##Print all layers
	TypePublish = 1 ##Warnings and Errors
	UseValue = -2 ##Print out efficiency for all bins above threshold
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Barrel
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_Barrel {
	name = SCT_SumEff_CompAlg
	Publish = 8 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Barrel
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_EndCap {
	name = SCT_SumEff_CompAlg
	Publish = 18 ##Print all disks
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_EndCap
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_Total {
	name = SCT_SumEff_CompAlg
	Publish = 3 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Total
	BinMinEntries = 200 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_TotalFBCID {
	name = SCT_SumEff_CompAlg
	Publish = 3 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_TotalFBCID
	BinMinEntries = 200 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}

## TEST

#compositeAlgorithm SCT_TrackResidual_TestAlg {
#  subalgs = CheckHisto_RMS,CheckHisto_Mean
#  libnames = libdqm_algorithms.so
#}
#algorithm SCT_Barrel_TrackPullTest {
#  name = SCT_TrackResidual_TestAlg
#  CheckHisto_RMS|thresholds = SCT_Barrel_TrackPull_Thresh_Mean
#  CheckHisto_Mean|thresholds = SCT_Barrel_TrackResidual_Thresh_RMS
#  MinStat = 100
#  reference = CentrallyManagedReferences
#}

#############
# Thresholds
#############

thresholds SCT_SumErrThreshold {
	limits NBins {
		warning = 40 #Any errors yields a warning
		error = 120 #>=10 generally indicates that a ROD is failing
	}
}

thresholds SCT_Chi2_KSTest_Thresh {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.09
		error = 0.27
	}
}

thresholds SCT_ClusterSize_KSTest_Thresh {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.045
		error = 0.135
	}
}

##NOTE: if N > NBins then the specified threshold pertains.
#thresholds SCT_SumEffThreshold_Barrel {
#	limits NBins {
#		warning = 0	##ANY Layer Side is below threshold
#		error = 7 ##ALL Layers & Sides are below threshold
#	}
#}
#thresholds SCT_SumEffThreshold_EndCap {
#	limits NBins {
#		warning = 6 ##Outer 3 disks might yield bad statistics
#		error = 9 ##If the inner 5 disks are all bad
#	}
#}

thresholds SCT_SumEffThreshold_Total {
	limits Value_All {
		##Using less than definitions
		warning = 0.98
		error = 0.97
	}
}
thresholds SCT_SumEffThreshold_TotalFBCID {
	limits Value_All {
		##Using less than definitions
		warning = 0.99
		error = 0.98
	}
}
thresholds SCT_SumEffThreshold_Barrel {
	limits Value_All {
		##Using less than definitions
		warning = 0.98
		error = 0.97
	}
}
thresholds SCT_SumEffThreshold_EndCap {
	limits Value_All {
		##Using less than definitions
		##Checking only first 4 bins
		warning = 0.98
		error = 0.97
	}
}

#thresholds SCT_Barrel_TrackResidual_Thresh_RMS {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.1 based on run 91808 Barrel Layer 0 Side 0
#		warning = 0.15
#		error = 0.2
#		##For HV = 50V expect 0.4 based on run 89956
#	}
#}
#thresholds SCT_Barrel_TrackPull_Thresh_Mean {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.04 based on run 91808 Layer 3 Side 0
#		warning = 0.02
#		error = 0.06
#	##For HV = 50V expect 0.08 based on run 89956
#	}
#}
#
#thresholds SCT_EndCap_TrackResidual_Thresh_RMS {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.12 based on run 92112
#		warning = 0.15
#		error = 0.2
#	}
#}
#thresholds SCT_EndCap_TrackPull_Thresh_Mean {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.1 based on run 91808 Layer 3 Side 0
#		warning = 0.1
#		error = 0.2
#	}
#}
#
##Adding looser criteria for when alginment is not ready
#
#thresholds SCT_Barrel_TrackResidual_Thresh_RMS_Loose {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.1 based on run 91808 Barrel Layer 0 Side 0
#		warning = 0.20
#		error = 0.25
#		##For HV = 50V expect 0.4 based on run 89956
#	}
#}
#thresholds SCT_Barrel_TrackPull_Thresh_Mean_Loose {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.04 based on run 91808 Layer 3 Side 0
#		warning = 0.04
#		error = 0.08
#		##For HV = 50V expect 0.08 based on run 89956
#	}
#}
#
#thresholds SCT_EndCap_TrackResidual_Thresh_RMS_Loose {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.12 based on run 92112
#		warning = 0.20
#		error = 0.25
#	}
#}
#thresholds SCT_EndCap_TrackPull_Thresh_Mean_Loose {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.1 based on run 91808 Layer 3 Side 0
#		warning = 0.2
#		error = 0.25
#	}
#}


thresholds SCT_Barrel_TrackPull_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.04
		error = 0.08
	}
}
thresholds SCT_Barrel_TrackResidual_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.05
		error = 0.1
	}
}

thresholds SCT_EndCap_TrackPull_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.09
		error = 0.18
	}
}
thresholds SCT_EndCap_TrackResidual_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.1
		error = 0.2
	}
}

#thresholds SCT_Noise_Thresh {
#	limits Value_All {
#		warning = 50
#		error = 100
#	}
#}
#
#thresholds SCT_TBin_AnyHit_Thresh {
#	##Using definitions for cosmics (majority of hits are noise)
#	limits Value_All { ##Applied only to bins 001, 010, 100
#		warning = 0.3 ##Warning if reduced by 1/10
#		error = 0.27 ##Error if reduced by 1/10 again
#	}
#}
#
#thresholds SCT_TBin_Error_Thresh {
#	limits Value_1 { ##000 should always be empty
#		warning = 0.0
#		error = 0.0 ##Warning == Error
#	}
#	limits Value_4 { ##011, wide hit range
#		warning = 0.02
#		error = 0.05
#	}
#	limits Value_7 { ##110, wide hit range
#		warning = 0.02
#		error = 0.05
#	}
#	limits Value_6 { ##101, not a hit pattern
#		warning = 0.001 ##Warning if more than a few entries
#		error = 0.02 ##Error if 100 or more
#	}
#	limits Value_8 { ##111, noise occupancy
#		warning = 0.05
#		error = 0.5 ##Stuck moduless will tend to dominate the hit distribution
#	}
#}
#
#thresholds SCT_TBinTrack_Thresh {
#	limits Value_1 { ##000 denotes a hole included as a hit
#		warning = 0.5
#		error = 0.5
#		##3 July 2009: Bin entries are supposed to be integers but rounding errors can occur.
#		##Therefore intermediate values must be used.
#	}
#}
#
#thresholds SCT_TBinTrack_WideHit_Thresh {
#	limits Value_1 { ##000 denotes a hole on a track
#		warning = 0
#		error = 0.001
#	}
#	limits Value_4 { ##011, wide hit range
#		warning = 0.2 ##Flat distribution among wide and narrow hits
#		error = 0.3
#	}
#	limits Value_7 { ##110, wide hit range
#		warning = 0.2
#		error = 0.3
#	}
#	limits Value_6 { ##101, not a hit pattern
#		warning = 0.001 ##Warning if more than a few entries
#		error = 0.02 ##Error if 100 or more
#	}
#	limits Value_8 { ##111, noise occupancy
#		warning = 0.05
#		error = 0.5 ##Noisey modules should be rare
#	}
#}

thresholds SCT_ModuleStatus_Threshold {
	limits Value_All {
		warning = 40
		error = 120
	}
}

thresholds SCT_OutModuleStatus_Threshold {
	limits Value_All {
		warning = 80
		error = 240
	}
}

thresholds SCT_RODStatus_Threshold {
	limits Value_All {
		warning = 1
		error = 300
	}
}

thresholds SCT_RODStatusCheck_Threshold {
	limits Value_All {
		warning = 0
		error = 300
	}
}

thresholds SCT_LinkStatus_Threshold {
        limits Value_All {
                warning = 80
                error = 300
        }
}

thresholds SCT_NumEvents_Threshold {
	limits Value_All {
		warning = 1
		error = -100
	}
}

thresholds SCT_SCTFlag_Threshold {
	limits Value_All {
		warning = 0.1
		error = 0.9
	}
}
