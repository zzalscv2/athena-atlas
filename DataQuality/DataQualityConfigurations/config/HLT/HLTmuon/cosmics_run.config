######################################################################
# $Id: cosmics_run.config Thu Jun 22 16:19:56 2023 vippolit $
######################################################################

#######################
# HLTmuon
#######################




#######################
# Output
#######################


output top_level {
	output HLT {
		output TRMUO {
      algorithm = TRMUO_WorstCaseSummary  

      output Shift {
        output EtaPhi {
          algorithm = TRMUO_WorstCaseSummary  
        }
        output EFMuon {
          algorithm = TRMUO_WorstCaseSummary  
          output ${hltchain_efsa} {
            algorithm = TRMUO_WorstCaseSummary  
          }
        }
      }

      output Expert {
        output L1Muon {
          algorithm = TRMUO_WorstCaseSummary  
        }
        output L2OverlapRemover {
          algorithm = TRMUO_WorstCaseSummary  
          output ${hltchain_l2overlapremover} {
          }
        }
        output TriggerCount {
          algorithm = TRMUO_WorstCaseSummary  
        }
      }
		}
	}
}


#######################
# Histogram Assessments
#######################

dir HLT {
	dir MuonMon {
    algorithm = TRMUO_GatherData
    output = HLT/TRMUO

		dir EFMuon {
			dir (?P<hltchain_efsa>HLT_.*) {
        regex = 1

				hist EFSA_Eta {
					algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Shift/EFMuon/${hltchain_efsa}
				}
				hist EFSA_Eta_vs_Phi {
					algorithm   	= alg_eta_vs_phi
					output      	= HLT/TRMUO/Shift/EFMuon/${hltchain_efsa}
				}
				hist EFSA_Phi {
					algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Shift/EFMuon/${hltchain_efsa}
				}
				hist EFSA_Pt {
					algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Shift/EFMuon/${hltchain_efsa}
				}
			}
		}
		dir L1Muon {
			hist l1Eta {
				algorithm   	= TRMUO_GatherData
				output      	= HLT/TRMUO/Expert/L1Muon
			}
			hist l1Phi {
				algorithm   	= TRMUO_GatherData
				output      	= HLT/TRMUO/Expert/L1Muon
			}
			hist l1Thres {
				algorithm   	= TRMUO_GatherData
				output      	= HLT/TRMUO/Expert/L1Muon
			}
		}
		dir L2OverlapRemover {
			dir (?P<hltchain_l2overlapremover>HLT_.*) {
        regex = 1

				hist L2CBOR_NInMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
				hist L2CBOR_NOutMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
				hist L2CBOR_NRemovedMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
				hist L2SAOR_NInMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
				hist L2SAOR_NOutMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
				hist L2SAOR_NRemovedMuon {
				  algorithm   	= TRMUO_GatherData
					output      	= HLT/TRMUO/Expert/L2OverlapRemover/${hltchain_l2overlapremover}
				}
			}
		}
		dir TriggerCount {
			hist Monitoring_Chain {
				algorithm   	= TRMUO_GatherData
				output      	= HLT/TRMUO/Expert/TriggerCount
			}
		}
		dir etaphi2D {
			hist EFSA_Eta_vs_Phi {
				algorithm   	= alg_eta_vs_phi
				output      	= HLT/TRMUO/Shift/EtaPhi
			}
			hist L1Muon_Eta_vs_Phi {
				algorithm   	= alg_eta_vs_phi
				output      	= HLT/TRMUO/Shift/EtaPhi
			}
			hist L2MuonSA_Eta_vs_Phi {
				algorithm   	= alg_eta_vs_phi
				output      	= HLT/TRMUO/Shift/EtaPhi
			}
		}
	}
}

##############
# Algorithms
##############

algorithm TRMUO_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

compositeAlgorithm TRMUO_HistNotEmpty_YellowEmpty&GatherData {
  subalgs = Bins_GreaterThan_Threshold,GatherData
  libnames = libdqm_algorithms.so
}

algorithm TRMUO_HistNotEmpty_YellowEmpty&GatherData {
  name = TRMUO_HistNotEmpty_YellowEmpty&GatherData
  BinThreshold = 0
  thresholds = TRMUO_HistNotEmpty_YellowEmpty_Threshold 
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

compositeAlgorithm Muon_Bins_LessThan_Threshold&GatherData {
  subalgs = Bins_LessThan_Threshold,GatherData
  libnames = libdqm_algorithms.so
}

algorithm Muon_Bins_LessThan_Threshold&GatherData {
  name = Muon_Bins_LessThan_Threshold&GatherData
  BinThreshold = -1
  thresholds = th_Muon_Bins_LessThan_Threshold&GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_L2MuonSA_residual_barrel {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
#  reference = IDPerf_Jpsi_mass_Ref
  thresholds = th_L2MuonSA_residual_barrel
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_L2MuonSA_residual_endcap {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
#  reference = IDPerf_Jpsi_mass_Ref
  thresholds = th_L2MuonSA_residual_endcap
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

#############
##Algorithms
#############
algorithm alg_eta_vs_phi {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 2000
# 16*27 = 432
# no trigger for |eta|>2.45 --> 2bins
# 16*25 = 400
# 10% due to barrel holes
# 8468
  TotalBins = 8468
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_muComb_ptratio {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 1.
  MinStat = 1000
#  reference = IDPerf_Jpsi_mass_Ref
  thresholds = th_muComb_ptratio
}

# muChainMSonly1
algorithm TRMUO_fermi_fit_mu10_MSonly_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MSonly_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MSonly_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# muChainMSonly1 wrt offline
algorithm TRMUO_fermi_fit_mu10_MSonly_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MSonly_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MSonly_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MSonly_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

# muChain1
algorithm TRMUO_fermi_fit_mu6_MSonly_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu6_MSonly_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu6_MSonly_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu6_MSonly_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu6_MSonly_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu6_MSonly_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# muChain1 wrt offline
algorithm TRMUO_fermi_fit_mu6_MSonly_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu6_MSonly_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm alg_eta_vs_phi_tilemu {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi_tilemu
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 2000
# 16*27 = 432
# no trigger for |eta|>1.5 --> 14bins
# 16*13 = 208
  TotalBins = 208
}

#
# summary
#
algorithm TRMUO_WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}
algorithm TRMUO_SimpleSummary {
  libname = libdqm_summaries.so
  name = SimpleSummary
}

algorithm TRMUO_AlwaysGreenSummary {
  libname = libdqm_summaries.so
  name = AlwaysGreenSummary
}

algorithm TRMUO_AlwaysUndefinedSummary {
  libname = libdqm_summaries.so
  name = AlwaysUndefinedSummary
}

###############
# Thresholds
###############

thresholds TRMUO_HistNotEmpty_YellowEmpty_Threshold {
  limits NBins {
    error = -0.5
    warning = 0.5
  }
}

thresholds th_Muon_Bins_LessThan_Threshold&GatherData {
  limits NBins {
    warning = 100
    error = 1000
  }
}

thresholds th_L2MuonSA_residual_barrel {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}
thresholds th_L2MuonSA_residual_endcap {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}

thresholds th_eta_vs_phi {
  limits NBins {
# 360*0.9 = 324
    warning = 324
    error = 323
  }
}

thresholds th_muComb_ptratio {
 limits Sigma {
    warning = 0.4
    error = 0.6
  }
  limits AbsMean {
    warning = 0.4
    error = 0.6
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}

thresholds th_eta_vs_phi_tilemu {
  limits NBins {
# 208*0.9 = 187.2
    warning = 187
    error = 186
  }
}

# muChainMSonly1
thresholds th_TRMUO_fermi_fit_mu10_MSonly_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MSonly_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MSonly_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

# muChainMSonly1 wrt offline

thresholds th_TRMUO_fermi_fit_mu10_MSonly_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MSonly_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MSonly_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 8.0
    error   = 7.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}



# muChain1
thresholds th_TRMUO_fermi_fit_mu6_MSonly_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu6_MSonly_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu6_MSonly_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

# muChain1 wrt offline

thresholds th_TRMUO_fermi_fit_mu6_MSonly_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu6_MSonly_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu6_MSonly_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 16.0
    error   = 15.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}
