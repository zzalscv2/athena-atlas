# **********************************************************************
# $Id: heavyions_run.config
# **********************************************************************

#######################
# HLTmuon
#######################

#######################
# Output
#######################

output top_level {
  algorithm = TRMUO_WorstCaseSummary
#tomoe added 2011.1.22
  output HLT {

    output TRMUO {
       output Shift {
         algorithm = TRMUO_WorstCaseSummary
    
         output ${muchain} {
         }
         output Etaphi {
          algorithm = TRMUO_WorstCaseSummary
         }
       } ##end output Shift
    
       output Expert {
         algorithm = TRMUO_AlwaysGreenSummary
    
        output Efficiency {
          algorithm = TRMUO_WorstCaseSummary
    
          output ${muchain} {
            output wrtUpstream {
              algorithm = TRMUO_SimpleSummary
            }
            output wrtOffline {
              algorithm = TRMUO_SimpleSummary
            }
          }
        }
        output L1Muon {
          algorithm = TRMUO_WorstCaseSummary
        }
        output L2MuonSA {
          algorithm = TRMUO_WorstCaseSummary

          output ${muchain} {
          }
        }
        output L2muComb {
          algorithm = TRMUO_WorstCaseSummary

          output ${muchain} {
          }
        }
        output EFMuon {
          algorithm = TRMUO_WorstCaseSummary

          output ${muchain} {
          }
        }
        output Ratio {
          algorithm = TRMUO_SimpleSummary
        }
       } ##end output Expert
    }  #end output TRMUO
 } ## end output HLT
} ## end output top_level



#######################
# Histogram Assessments
#######################

dir HLT {
  algorithm = HLT_Histogram_Not_Empty&GatherData

  dir MuonMon {
    algorithm = Muon_Bins_LessThan_Threshold&GatherData
    output = HLT/TRMUO

    # L2MuonSA
    dir L2MuonSA {
      dir (?P<muchain>HLT_.*) {
        regex = 1

        hist L2MuonSA_MDT_Mid_residual_barrel {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = alg_L2MuonSA_residual_barrel
          weight = 0.0
        }
        hist L2MuonSA_MDT_Mid_residual_endcap {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = alg_L2MuonSA_residual_endcap
          weight = 0.0
        }
        hist L2MuonSA_Eta_vs_Phi {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = alg_eta_vs_phi
        }
        hist L2MuonSA_proc_flow {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_Pt {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_Eta {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_Phi {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_Phi_Barrel {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_Phi_Endcap {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_MDT_Mid_residual_barrel_OffMatch {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2MuonSA_MDT_Mid_residual_endcap_OffMatch {
          output = HLT/TRMUO/Expert/L2MuonSA/${muchain}
          algorithm = TRMUO_GatherData
        }
      } # end muchain
    } # end L2MuonSA

    # L2muComb 
    dir L2muComb {
      dir (?P<muchain>HLT_.*) {
        regex = 1

        hist L2muComb_ptratio_toSA {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = alg_muComb_ptratio
          weight = 0.0
        }
        hist L2muComb_Eta_vs_Phi {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = alg_eta_vs_phi
        }
        hist L2muComb_Pt {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2muComb_Eta {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2muComb_Phi {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = TRMUO_GatherData
        }
        hist L2muComb_Eta_vs_Phi_L2CBOFFmatching_failure {
          output = HLT/TRMUO/Expert/L2muComb/${muchain}
          algorithm = TRMUO_GatherData
        }
      } # end muchain
    } # end L2muComb

    # EFMuon
    dir EFMuon {
      dir (?P<muchain>HLT_.*) {
        regex = 1

        hist EFSA_Eta_vs_Phi {
          output = HLT/TRMUO/Expert/EFMuon/${muchain}
          algorithm = alg_eta_vs_phi
        }
        hist EFCB_Eta_vs_Phi {
          output = HLT/TRMUO/Expert/EFMuon/${muchain}
          algorithm = alg_eta_vs_phi
        }
        hist EFSA_Pt {
          output = HLT/TRMUO/Expert/EFMuon/${muchain}
          algorithm = TRMUO_GatherData
          weight = 0.0
        }
        hist EFCB_Pt {
          output = HLT/TRMUO/Expert/EFMuon/${muchain}
          algorithm = TRMUO_GatherData
          weight = 0.0
        }
      } # end muchain
    } # end EFMuon

    #Efficiency
    dir Efficiency {
      dir ZTP {
        dir (?P<muchain>HLT_.*) {
          regex = 1

          # wrtUpstream
          hist EffL2SA_muPt_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_fermi_fit_mu50_L2MuonSA_upstream_Fit
          }
          hist EffL2CB_muPt_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_fermi_fit_mu50_muComb_upstream_Fit
          }
          hist EffEFSA_muPt_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_fermi_fit_mu50_MuonEFCB_upstream_Fit
          }
          hist EffEFCB_muPt_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_fermi_fit_mu50_MuonEFCB_upstream_Fit
          }
          hist EffL2SA_muPt_wrt_Upstream@shifter {
            output = HLT/TRMUO/Shift/${muchain}
            algorithm = TRMUO_fermi_fit_mu50_ESid_L2MuonSA_upstream_Fit
          }
          hist EffL2CB_muPt_wrt_Upstream@shifter {
            output = HLT/TRMUO/Shift/${muchain}
            algorithm = TRMUO_fermi_fit_mu50_ESid_muComb_upstream_Fit
          }
          hist EffEFSA_muPt_wrt_Upstream@shifter {
            output = HLT/TRMUO/Shift/${muchain}
            algorithm = TRMUO_fermi_fit_mu50_ESid_MuonEFCB_upstream_Fit
          }
          hist EffEFCB_muPt_wrt_Upstream@shifter {
            output = HLT/TRMUO/Shift/${muchain}
            algorithm = TRMUO_fermi_fit_mu50_ESid_MuonEFCB_upstream_Fit
          }
          hist EffL2SA_muEta_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_GatherData
          }
          hist EffL2CB_muEta_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_GatherData
          }
          hist EffEFSA_muEta_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_GatherData
          }
          hist EffEFCB_muEta_wrt_Upstream {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtUpstream
            algorithm = TRMUO_GatherData
          }
          # wrtOffline
          hist EffL1MU_muPt_wrt_Probe {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_fermi_fit_L1MU20_Fit
          }
          hist EffL2SA_muPt_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_fermi_fit_L1MU20_Fit
          }
          hist EffL2CB_muPt_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_fermi_fit_mu50_muComb_Fit
          }
          hist EffEFSA_muPt_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_fermi_fit_mu50_MuonEFSA_Fit
          }
          hist EffEFCB_muPt_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_fermi_fit_mu50_MuonEFCB_Fit
          }
          hist EffL1MU_muEta_wrt_Probe {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_GatherData
          }
          hist EffL2SA_muEta_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_GatherData
          }
          hist EffL2CB_muEta_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_GatherData
          }
          hist EffEFSA_muEta_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_GatherData
          }
          hist EffEFCB_muEta_wrt_offlineCB {
            output = HLT/TRMUO/Expert/Efficiency/${muchain}/wrtOffline
            algorithm = TRMUO_GatherData
          }
        } # end muchain
      } # end ZTP
    } #end dir efficiency


    dir etaphi2D {

      hist L1Muon_Eta_vs_Phi {
        output = HLT/TRMUO/Expert/L1Muon
      }
      hist L2MuonSA_Eta_vs_Phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
        description = Check for holes. If the color is red, please report.
      }
      hist L2muComb_Eta_vs_Phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
        description = Check for holes. If the color is red, please report.
      }
      hist EFSA_Eta_vs_Phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
        description = Check for holes. If the color is red, please report.
      }
      hist EFCB_Eta_vs_Phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
        description = Check for holes. If the color is red, please report.
      }
    } # end etaphi2D

    dir Ratio {

      hist .* {
        output = HLT/TRMUO/Expert/Ratio
        algorithm = TRMUO_GatherDataNoRef
      }
    } # end Ratio
  } # end MuonMon
} # end HLT


##############
# Algorithms
##############

algorithm TRMUO_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm TRMUO_GatherDataNoRef {
  libname = libdqm_algorithms.so
  name = GatherData
}

compositeAlgorithm Muon_Bins_LessThan_Threshold&GatherData {
  subalgs = Bins_LessThan_Threshold,GatherData
  libnames = libdqm_algorithms.so
}

algorithm Muon_Bins_LessThan_Threshold&GatherData {
  name = Muon_Bins_LessThan_Threshold&GatherData
  BinThreshold = -1
  thresholds = th_Muon_Bins_LessThan_Threshold&GatherData
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm alg_L2MuonSA_residual_barrel {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
  thresholds = th_L2MuonSA_residual_barrel
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm alg_L2MuonSA_residual_endcap {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
  thresholds = th_L2MuonSA_residual_endcap
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm alg_eta_vs_phi {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 90000
# 108*96 = 10368
# no trigger for |eta|>2.4 --> 12bins
# 96*96 = 9216
# 10% due to barrel holes
# 8294
  TotalBins = 8294
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm alg_eta_vs_phi_barrel {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi_barrel
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 90000
# 108*96 = 10368
# no trigger for |eta|>2.4 --> 12bins
# 96*96 = 9216
# 10% due to barrel holes
# 8294
  TotalBins = 8294
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

algorithm alg_muComb_ptratio {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 1.
  MinStat = 1000
  thresholds = th_muComb_ptratio
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
}

#for Shift
algorithm fourbins_zero {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_L1mux
  BinThreshold = 8
  MinStat = 500
#  NotEqual = 1
  PublishBins = 1
}

algorithm effalgmin_ESid_mu20 {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_ESid_mu20_th
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  #reference = HLTmuonShiftES20thr_Ref
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_highpt3bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_highpt3bins_th
  #reference = HLT_local_reference
  #reference = HLTmuonShiftES20thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_highpt2bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_highpt2bins_th
  #reference = HLT_local_reference
  #reference = HLTmuonShiftES20thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

#generic bin comparison
algorithm effalgmin_4bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_generic4bins_th
  #reference = HLT_local_reference
  #reference = HLTmuonShift2015thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_3bins {
  libname = libdqm_algorithms.so
  name = BinContentDump
  #name = BinContentComp&BinContentDump
  thresholds = effmin_generic3bins_th
  #reference = HLT_local_reference
  #reference = HLTmuonShift2015thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_2bins {
  libname = libdqm_algorithms.so
  name = BinContentDump
#name = BinContentComp&BinContentDump
  thresholds = effmin_generic2bins_th
  #reference = HLT_local_reference
  #reference = HLTmuonShift2015thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm coarse1dcomp_mu24i_L2MuonSA {
  libname = libdqm_algorithms.so
  name = BinContentComp
  thresholds = coarse1dcomp_mu24i_L2MuonSA_th
  #reference = HLT_local_reference
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;stream=physics_HardProbes:CentrallyManagedReferences_TriggerHardProbes;stream=physics_UPC:CentrallyManagedReferences_TriggerUPC;CentrallyManagedReferences_Trigger
  NSigma = 3.0
  LessThan = 1
  NormRef = 1
  PublishBins = 1
  IncludeRefError = 1
  MinStat = 500000
}

compositeAlgorithm BinContentComp&BinContentDump {
  subalgs = BinContentComp,BinContentDump
  libnames = libdqm_algorithms.so
}

compositeAlgorithm BinContentComp&BinContentDump2 {
  subalgs = BinContentComp,BinContentDump
  libnames = libdqm_algorithms.so
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFMS_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}



# mu50 Shifter
algorithm TRMUO_fermi_fit_mu50_ESid_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESid_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu50_ESid_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESid_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu50_ESid_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESid_MuonEFCB_upstream
  MinPoint = 40
  ImproveFit = 1.0
#  MinSignificance = 2.0
}


algorithm TRMUO_fermi_fit_mu50_ESstd_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESstd_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_ESstd_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESstd_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_ESstd_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_ESstd_MuonEFCB_upstream
  MinPoint = 40
  ImproveFit = 1.0
}


# Generic L1 mu15 fit
algorithm TRMUO_fermi_fit_L1MU20_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU20
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_L1MU20_barrel_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU20_barrel
  MinPoint = 40
  ImproveFit = 1.0
}
#attention here, change the MinPoint from 50 to 40

algorithm TRMUO_fermi_fit_L1MU20_endcap_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU20_endcap
  MinPoint = 50
  ImproveFit = 1.0
}


# for the muChainEFFS1 fit
algorithm TRMUO_fermi_fit_mu18_tight_mu8_EFFS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu18_tight_mu8_EFFS
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu18it_tight_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu18it_tight
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu18it_tight_L1_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu18it_tight_L1
  MinPoint = 50
  ImproveFit = 1.0
}


####

# mu60_0eta105_msonly 
algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}



# mu40_MSonly_barrel wrt offline
algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50


# //


# mu50
algorithm TRMUO_fermi_fit_mu50_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_muComb_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_muComb_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFCB_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFCB_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu50_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFMS_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFSA_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFCB_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

# mu50 wrt offline
algorithm TRMUO_fermi_fit_mu50_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_muComb {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_muComb
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFCB {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFCB
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu50_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu50_muComb_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_muComb
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu50_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFMS
  MinPoint = 80
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFSA
  MinPoint = 80
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu50_MuonEFCB_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu50_MuonEFCB
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50

# mu15i
algorithm TRMUO_fermi_fit_mu24i_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_muComb_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_muComb_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFCB_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFCB_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu24i_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFMS_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFSA_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFCB_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

# _Fit for shifter
algorithm TRMUO_fermi_fit_mu24i_ESid_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_ESid_L2MuonSA_upstream
  MinPoint = 10
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_ESid_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_ESid_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_ESid_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_ESid_MuonEFCB_upstream
  MinPoint = 110
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

# mu15i wrt offline
algorithm TRMUO_fermi_fit_mu24i_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_muComb {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_muComb
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFCB {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFCB
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu24i_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 70 to 50

algorithm TRMUO_fermi_fit_mu24i_muComb_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_muComb
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 70 to 50

algorithm TRMUO_fermi_fit_mu24i_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFMS
  MinPoint = 70
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFSA
  MinPoint = 70
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu24i_MuonEFCB_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu24i_MuonEFCB
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 70 to 50


#
# summary
#
algorithm TRMUO_WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}
algorithm TRMUO_SimpleSummary {
  libname = libdqm_summaries.so
  name = SimpleSummary
}

algorithm TRMUO_AlwaysGreenSummary {
  libname = libdqm_summaries.so
  name = AlwaysGreenSummary
}

algorithm TRMUO_AlwaysUndefinedSummary {
  libname = libdqm_summaries.so
  name = AlwaysUndefinedSummary
}



###############
# Thresholds
###############

thresholds th_L1mux {
  limits NBins {
    warning = 4
    error = 5
  }
}

thresholds th_Muon_Bins_LessThan_Threshold&GatherData {
  limits NBins {
    warning = 100
    error = 1000
  }
}

thresholds effmin_ESid_mu20_th {
  limits NBins {
    warning = 0
    error = 4
  }
}

thresholds effmin_highpt3bins_th {
  limits NBins {
    warning = 0
    error = 3
  }
}

thresholds effmin_highpt2bins_th {
  limits NBins {
    warning = 0
    error = 2
  }
}

thresholds effmin_generic4bins_th {
  limits NBins {
    warning = 0
    error = 4
  }
}

thresholds effmin_generic3bins_th {
  limits NBins {
    warning = 0
    error = 3
  }
}

thresholds effmin_generic2bins_th {
  limits NBins {
    warning = 0
    error = 2
  }
}

#coarse1d number of bins
thresholds coarse1dcomp_mu24i_L2MuonSA_th {
  limits NBins {
    warning = 5
    error = 10
  }
}


thresholds th_L2MuonSA_residual_barrel {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}
thresholds th_L2MuonSA_residual_endcap {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}

thresholds th_eta_vs_phi {
  limits NBins {
# 90%
# 8294*0.9 = 7464
# 80% for the moment
# 8294*0.8 = 6635
    warning = 8500
    error = 8499
  }
}

thresholds th_eta_vs_phi_barrel {
  limits NBins {
# 90%
# 8294*0.9 = 7464
# 30% for the moment
# 8294*0.8 = 2487
    warning = 3300
    error = 3299
  }
}

thresholds th_muComb_ptratio {
 limits Sigma {
    warning = 0.4
    error = 0.6
  }
  limits AbsMean {
    warning = 0.4
    error = 0.6
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}


#for Shift
thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.90
    error = 0.899
  }
  limits Threshold {
    warning = 8.0
    error   = 10.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
#  limits Threshold {
#    warning = 60.0
#    error   = 65.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_EStag_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.93
    error = 0.929
  }
  limits Threshold {
    warning = 60.0
    error   = 65.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


#for Shift mu50
thresholds th_TRMUO_fermi_fit_mu50_ESid_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979
  }
  limits Threshold {
    warning = 8.0
    error = 10.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_ESid_muComb_upstream {
  limits Plateau {
#    warning = 0.98 # 120830
#   warning = 0.97 # 110909
    warning = 0.965
    error = 0.964
  }
  limits Threshold {
    warning = 22.0
    error = 24.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu50_ESid_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979 
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu50_ESstd_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_ESstd_muComb_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.94
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu50_ESstd_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


# L1MU15 generic
thresholds th_TRMUO_fermi_fit_L1MU20 {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 20.0
    error   = 22.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_L1MU20_barrel {
  limits Plateau {
    warning = 0.7
    error = 0.699
  }
  limits Threshold {
    warning = 20.0
    error   = 22.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_L1MU20_endcap {
  limits Plateau {
    warning = 0.88
    error = 0.8799
  }
  limits Threshold {
    warning = 20.0
    error   = 22.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

# for mu18_tight_mu8_EFFS
thresholds th_TRMUO_fermi_fit_mu18_tight_mu8_EFFS {
  limits Plateau {
    warning = 0.93
    error = 0.92
  }
  limits Threshold {
    warning = 8.5  ## 8.0 Before 2015Oct25
    error   = 11.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu18it_tight {
  limits Plateau {
    warning = 0.73
    error = 0.71
  }
  limits Threshold {
    warning = 23.0
    error   = 25.0
#    warning = 18.5
#    error   = 20.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu18it_tight_L1 {
  limits Plateau {
    warning = 0.96
    error = 0.95
  }
  limits Threshold {
    warning = 23.0
    error   = 25.0
#    warning = 18.5
#    error   = 20.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


# mu60_0eta105_msonly 
thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 8.0
    error   = 10.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
#  limits Threshold {
#    warning = 50.0
#    error   = 54.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
  limits Threshold {
    warning = 60.0
    error   = 65.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

# mu40_MSonly_barrel wrt offline

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 60.0
    error   = 65.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 60.0
    error   = 65.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu60_MSonly_barrel_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 60.0
    error   = 65.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

# ///

# mu50
thresholds th_TRMUO_fermi_fit_mu50_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.99
    error = 0.98
  }
  limits Threshold {
    warning = 8.0
    error = 10.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu50_muComb_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.97
  }
  limits Threshold {
    warning = 22.0
    error = 24.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
#  limits Threshold {
#    warning = 50.0
#    error = 52.0
#  }
#  limits Resolution {
#    warning = 2.0
#    error   = 3.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


# mu50 wrt offline

thresholds th_TRMUO_fermi_fit_mu50_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 8.0
    error = 10.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu50_muComb {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 22.0
    error = 24.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu50_MuonEFCB {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 50.0
    error = 52.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


# mu24_imedium
thresholds th_TRMUO_fermi_fit_mu24i_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 8.0
    error   = 10.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


thresholds th_TRMUO_fermi_fit_mu24i_muComb_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 22.0
    error   = 24.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
#  limits Threshold {
#    warning = 26.5
#    error   = 28.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
#    warning = 1.0
#    error   = 2.0
    warning = 1.5
    error   = 3.0

  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

# for shifters
thresholds th_TRMUO_fermi_fit_mu24i_ESid_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979
  }
  limits Threshold {
    warning = 8.0
    error   = 10.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


thresholds th_TRMUO_fermi_fit_mu24i_ESid_muComb_upstream {
  limits Plateau {
# Update 30.08.12
# warning = 0.98
    warning = 0.965
    error = 0.964
  }
  limits Threshold {
    warning = 22.0
    error   = 24.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu24i_ESid_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.94
    error = 0.92
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
#    warning = 1.0   // before 20151025
#    error   = 2.0   // before 20151025
    warning = 2.0
    error   = 3.0
  }
}

# mu24_imedium wrt offline

thresholds th_TRMUO_fermi_fit_mu24i_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 8.0
    error   = 10.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}


thresholds th_TRMUO_fermi_fit_mu24i_muComb {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 22.0
    error   = 24.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu24i_MuonEFCB {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 26.5
    error   = 28.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

