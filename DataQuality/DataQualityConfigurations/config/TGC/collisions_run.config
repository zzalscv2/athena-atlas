# **********************************************************************
# $Id: collisions_run.config 768155 2016-08-16 11:07:43Z tuna $
# **********************************************************************

###########################################################
# TGC
###########################################################


########################
# References
#######################

reference TGCShift2016thr_Ref {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/
  file = data16_13TeV.00304008.express_express.merge.HIST.f716_h151._0001.1
  path = run_304008
  name = same_name
  info = Run 304008, express_express
}

#############
# Algorithms
#############
    
algorithm alg_KTestProb {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_Prob
  # reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  thresholds = thr_KTestProb
}
thresholds thr_KTestProb {
  limits P {
    warning = 0.9
    error = 0.8
  }
}

algorithm TGC_Hits {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = th_TGC_Mean_Of_Hits
  MinStat = 1000
}
algorithm TGC_OccupancyMapWire {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_OccupancyMapWireThreshold
  MinStat = 1500
  BinThreshold = 0.02
  TotalBins = 1794
}
algorithm TGC_OccupancyMapStrip {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_OccupancyMapStripThreshold
  MinStat = 1200
  BinThreshold = 0.02
  TotalBins = 1578
}
algorithm TGC_Efficiency {
  #  libname = libdqm_algorithms.so
  #  name = Bins_LessThan_Threshold
  #  thresholds = th_TGC_EfficiencyThreshold
  #  MinStat = 14
  #  BinThreshold = 0.8
  ##  BinThreshold = 0
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold&TGCBinContentDump&Histogram_Not_Empty
  thresholds = th_TGC_EfficiencyThreshold
  reference = TGCShift2016thr_Ref
  #  MinStat = 20000
  BinThreshold = 0.90
  TotalBins = 13
}
algorithm TGC_Coverage {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_Coverage
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 20000
  TotalBins = 1794
}
compositeAlgorithm Bins_GreaterThan_Threshold&TGCBinContentDump&Histogram_Not_Empty {
  subalgs = Bins_GreaterThan_Threshold,BinContentDump,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}
compositeAlgorithm SideBand_Relative&Histogram_Not_Empty {
  subalgs = SideBand_Relative,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}
algorithm TGC_Trigger_Timing {
  name = SideBand_Relative
  thresholds = th_TGC_TriggerTimingThreshold
  MinStat = 100
  UseUnderFlow = 0
  UseOverFlow = 0
  Min = 1
  Max = 1.99
}

algorithm TGC_Trigger_Sector {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_TGC_Trigger_Sector_Threshold
  MinStat = 5000
  BinThreshold = 1
}
algorithm TGC_RoI_Map {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640
}
algorithm TGC_RoI_Map_PT5 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map_PT5
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640
}
algorithm TGC_RoI_Map_PT6 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map_PT6
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640
}
#algorithm TGC_SL_Map {
#  libname = libdqm_algorithms.so
#  name = Bins_GreaterThan_Threshold
#  thresholds = th_TGC_SL_Map
#  MinStat = 10000
#  BinThreshold = 1
#}
algorithm TGC_SL_Map {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_SL_Map
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 4000
  TotalBins = 264
}
algorithm TGC_Pt_Threshold {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_TGC_Pt_Threshold
  # reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  MinStat = 1000
  BinThreshold = 1.0
}
algorithm TGC_Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}

### fermi fits temporarily disabled as they frequently give false alarms
## turn-on fermi
## PT1
#algorithm TGC_fermi_fit_PT1 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT1
#  MinPoint = 50
#  ImproveFit = 1.0
#}
## PT2
#algorithm TGC_fermi_fit_PT2 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT2
#  MinPoint = 50
#  ImproveFit = 1.0
#}
## PT3
#algorithm TGC_fermi_fit_PT3 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT3
#  MinPoint = 60
#  ImproveFit = 1.0
#}
## PT4
#algorithm TGC_fermi_fit_PT4 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT4
#  MinPoint = 60
#  ImproveFit = 1.0
#}
## PT5
#algorithm TGC_fermi_fit_PT5 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT5
#  MinPoint = 70
#  ImproveFit = 1.0
#}
## PT6
#algorithm TGC_fermi_fit_PT6 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT6
#  MinPoint = 80
#  ImproveFit = 1.0
#}

### flat fits do not give false alarms
# turn-on flat
# PT1
algorithm TGC_flat_fit_PT1 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 40
  xmin = 6
}
algorithm TGC_flat_fit_PT2 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 40
  xmin = 8
}
algorithm TGC_flat_fit_PT3 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 50
  xmin = 10
}
algorithm TGC_flat_fit_PT4 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 12
}
algorithm TGC_flat_fit_PT5 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 14
}
algorithm TGC_flat_fit_PT6 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 16
}

algorithm TGC_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}

# summary
algorithm TGC_WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}
algorithm TGC_SimpleSummary {
 libname = libdqm_summaries.so
 name = SimpleSummary
 reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}

algorithm TGC_AlwaysGreenSummary {
 libname = libdqm_summaries.so
 name = AlwaysGreenSummary
 reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}

algorithm TGC_AlwaysUndefinedSummary {
 libname = libdqm_summaries.so
 name = AlwaysUndefinedSummary
 reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}

algorithm TGC_OccupancyHoleFinder_imp {
  libname = libdqm_algorithms.so
  name = OccupancyHoleFinder
  MinMedian = 50
  MedianThreshold = 0.1
  ##Don't print info about lbn ranges above 95%
  SuppressThresh = 95
  ##Don't print info about dead chambers
  SuppressChamber = 1
  thresholds = th_TGC_OccupancyHoleFinder
}

algorithm alg_L1eff_eta_vs_phi {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_L1eff_eta_vs_phi
  BinThreshold = 0.90
  MinBinThreshold = 0.85
  MinStat = 20000
  TotalBins = 1296
}

algorithm alg_summary_timming_fraction {
  libname = libdqm_algorithms.so
  name = SideBand_Relative
  thresholds = th_summary_timming_fraction
  MinStat = 210
  UseUnderFlow = 1
  UseOverFlow = 1
  Min = 0.701
  Max = 1.001

}


#############
# Thresholds
#############

thresholds th_TGC_Mean_Of_Hits {
  limits XMean {
    warning = 140
    error = 240
  }
}
thresholds th_TGC_OccupancyMapWireThreshold {
  limits NBins {
    warning = 1614
    error = 1434
  }
}
thresholds th_TGC_OccupancyMapStripThreshold {
  limits NBins {
    warning = 1420
    error = 1262
  }
}
thresholds th_TGC_EfficiencyThreshold {
  limits NBins {
    warning = 10
    error = 7
  }
}
thresholds th_TGC_Coverage {
  limits NBins {
    # 2064-1794=270 (no chamber)
    #
    #  only bottom 5 sectors are active for cosmic
    # (1794 * 7/12 or 8/12 ) + 270 = 1316, 1466
    #    warning = 1316
    #    error = 1466
    #
    #  all sectors are active for physics
    # (1794 * 0.1 or 2/12) + 270 = 449, 569
    warning = 1614
    error = 1613
  }
}
thresholds th_TGC_TriggerTimingThreshold {
  limits Threshold {
    warning = 0.40
    error = 0.4001
  }
}
thresholds th_TGC_Trigger_Sector_Threshold {
  limits NBins {
    warning = 0.5
    error = 0.0
  }
}
thresholds th_TGC_RoI_Map {
  limits NBins {
    # 8640 * 0.92 = 7950
    # 8640 * 0.80 = 6912
    # reduced to avoid warnings
    warning = 7950
    error = 6912
  }
}
thresholds th_TGC_RoI_Map_PT5 {
  limits NBins {
    # 8640 * 0.85 = 7344
    # 8640 * 0.80 = 6912
    warning = 7344
    error = 6912
  }
}
thresholds th_TGC_RoI_Map_PT6 {
  limits NBins {
    # 8640 * 0.92 = 7950
    # 8640 * 0.80 = 6912
    warning = 7950
    error = 6912
  }
}

thresholds th_TGC_SL_Map {
  limits NBins {
    # 264 * 0.9 =237.6
    warning = 237
    error = 236
  }
}
thresholds th_TGC_Pt_Threshold {
  limits NBins {
    warning = 4
    error = 3
  }
}

### fermi fit thresholds, commented out whilst fermi algorithms are commented out
## turn-on thresholds
## PT1
#thresholds th_TGC_fermi_fit_PT1 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 3.0
#    error   = 2.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
#}
## PT2
#thresholds th_TGC_fermi_fit_PT2 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 4.0
#    error   = 3.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
#}
## PT3
#thresholds th_TGC_fermi_fit_PT3 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 7.0
#    error   = 6.0
#  }
#  limits Resolution {
#    warning = 2.0
#    error   = 3.0
#  }
#}
## PT4
#thresholds th_TGC_fermi_fit_PT4 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 11.0
#    error   = 10.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
#}
## PT5
#thresholds th_TGC_fermi_fit_PT5 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 11.0
#    error   = 10.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
#}
## PT6
#thresholds th_TGC_fermi_fit_PT6 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 15.0
#    error   = 14.0
#  }
#  limits Resolution {
#    warning = 4.0
#    error   = 5.0
#  }
#}

# flat thresholds
thresholds th_TGC_flat_fit {
  limits Height {
    warning = 0.9
    error = 0.85
  }
}

thresholds th_TGC_OccupancyHoleFinder {
  limits NBins {
    #total 656/986
    warning = 90.001
    error = 90
  }
}

thresholds th_L1eff_eta_vs_phi {
  limits NBins {
    warning = 1166
    error =  1100
  }
}

thresholds th_summary_timming_fraction {
  limits Threshold {
    warning = 0.30
    error = 0.40
  }
}


#############
# Directory
#############

dir Muon {
  dir MuonRawDataMonitoring {
    dir TGC {
      regex = 1
      dir Trig {
        algorithm = TGC_GatherData
        output = MuonDetectors/L1MU/L1MUE/Shifter/MuonRoIs
        ##################### Charge ####################
        hist MuonRoI_Eff_EtaVsPhi_Charge {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Pt_TGC_Charge.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
        }
        hist MuonRoI_Eff_Eta_Charge {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
        }
        hist MuonRoI_Eff_Phi_TGC_Charge {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
        }
        hist MuonRoI_Eff_PtVsPhi_TGC_Charge.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
        }
        hist MuonRoI_Evt_Charge {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
        }
        hist MuonRoI_Evt_EtaVsPhi_Charge.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_ChargeVsThr {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/ChargeFlag
          display = LogZ,Draw=COLZ
        }
        ##################### BW3Coin Veto ####################
        hist MuonRoI_Evt_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Evt_EtaVsPhi_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_EtaVsPhi_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_Eta_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Evt_Phi_TGC_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Evt_ThrVsBW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Eta_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Eff_Phi_TGC_wBW3CoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Eff_Pt_TGC_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Eff_Eta_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Eff_Phi_TGC_BW3CoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wBW3CoinVeto_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3CoinVeto
        }
        ##################### BW3Coin  ####################
        hist MuonRoI_Evt_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Evt_EtaVsPhi_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_EtaVsPhi_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_Eta_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Evt_Phi_TGC_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Evt_ThrVsBW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Eta_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Eff_Phi_TGC_wBW3Coin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Eff_Pt_TGC_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Eff_Eta_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Eff_Phi_TGC_BW3Coin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wBW3Coin_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/BW3CoinFlag/wBW3Coin
        }
        ##################### InnerCoin Veto  ####################
        hist MuonRoI_Evt_EtaVsPhi_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_EtaVsPhi_wInnerCoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_Eta_wInnerCoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Evt_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Evt_Phi_TGC_wInnerCoinVeto_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Evt_ThrVsInnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_wInnerCoinVeto_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Eta_wInnerCoinVeto_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_Phi_TGC_wInnerCoinVeto_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_Pt_TGC_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_Eta_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_Phi_TGC_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_Phi_TGC_.*_InnerCoinVeto {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wInnerCoinVeto_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoinVeto
        }
        ##################### InnerCoin   ####################
        hist MuonRoI_Evt_EtaVsPhi_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_EtaVsPhi_wInnerCoin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_Eta_wInnerCoin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Evt_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Evt_Phi_TGC_wInnerCoin_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Evt_ThrVsInnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_wInnerCoin_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Eta_wInnerCoin_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_Phi_TGC_wInnerCoin_Thr.*  {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_Pt_TGC_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_Eta_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_Phi_TGC_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_Phi_TGC_.*_InnerCoin {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wInnerCoin_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/InnerCoinFlag/wInnerCoin
        }
        ##################### BadMF  ####################
        hist MuonRoI_Eff_EtaVsPhi_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Pt_TGC_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_Eta_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_Phi_TGC_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Evt_EtaVsPhi_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_ThrVsBadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_BadMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wBadMF_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_Eta_wBadMF_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_Phi_TGC_wBadMF_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        hist MuonRoI_Eff_EtaVsPhi_wBadMF_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wBadMF
        }
        ##################### GoodMF  ####################
        hist MuonRoI_Eff_EtaVsPhi_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_Pt_TGC_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_Eta_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_Phi_TGC_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Evt_EtaVsPhi_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_ThrVsGoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
          display = LogZ,Draw=COLZ
        }
        hist MuonRoI_Evt_GoodMF {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_SectorVsRoINumber_wGoodMF_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_Eta_wGoodMF_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_Phi_TGC_wGoodMF_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        hist MuonRoI_Eff_EtaVsPhi_wGoodMF_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/GoodMFFlag/wGoodMF
        }
        ##################### IsMoreCand (RPC) ####################
        hist MuonRoI.*IsMoreCand.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Flags/IsMoreCand
        }
        ###################### Trigger efficiency ####################
        hist MuonRoI_Eff_EtaVsPhi_Thr.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/EtaVsPhi
        }
        hist MuonRoI_Eff_Eta_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/Eta
        }
        hist MuonRoI_Eff_Phi_RPC_Thr0[123456] {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/Phi
        }
        hist MuonRoI_Eff_Phi_TGC_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/Phi
        }
        hist MuonRoI_Eff_Pt_RPC_Thr0[123456] {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/Pt
        }
        hist MuonRoI_Eff_Pt_TGC_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/Pt
        }
        hist MuonRoI_Eff_PtVsPhi_TGC_Endcap.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/PtVsPhi
        }
        hist MuonRoI_Eff_PtVsPhi_TGC_Forward.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Efficiency/PtVsPhi
        }
        ###################### Trigger occupancy ####################
        hist MuonRoI_Evt_EtaVsPhi_Thr.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/EtaVsPhi
        }
        hist MuonRoI_Evt_Eta_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/Eta
        }
        hist MuonRoI_Evt_PhiVsLB_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/PhiVsLB
        }
        hist MuonRoI_Evt_Phi_RPC_Thr0[123456] {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/Phi
        }
        hist MuonRoI_Evt_Phi_TGC_Thr.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/Phi
        }
        hist MuonRoI_Evt_Thresholds_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/Thresholds
        }
        ###################### Trigger Sector vs XXX ####################
        hist MuonRoI_Evt_SectorVsThreshold_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/SectorVsThreshold
        }
        hist MuonRoI_Evt_SectorVsRoINumber_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/SectorVsRoINumber
        }
        ###################### Trigger timing ####################
        hist MuonRoI_Evt_SectorVsTiming_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/MuonRoIs/Occupancy/Timing
        }
        ################# Shifter #####################
        hist MuonRoI_Evt_Thresholds_TGC@Shifter {
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_Endcap_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_Endcap_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_Forward_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_Forward_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wInnerCoinEtaUpTo1p3_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wInnerCoinEtaBeyond1p3_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wInnerCoinEtaUpTo1p3_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wInnerCoinEtaBeyond1p3_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wBW3Coin_Endcap_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wBW3Coin_Forward_sideA@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wBW3Coin_Endcap_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_PhiVsLB_wBW3Coin_Forward_sideC@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_Endcap@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_Forward@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_wBW3Coin_Endcap@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_wBW3Coin_Forward@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_wInnerCoin_Endcap@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsRoINumber_wInnerCoin_Forward@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Eff_EtaVsPhi_Charge@Shifter {
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_BW3Coin@Shifter {
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_InnerCoin@Shifter {
          display = Draw=COLZ
        }
        hist MuonRoI_Eff_EtaVsPhi_GoodMF@Shifter {
          display = Draw=COLZ
        }
        hist MuonRoI_Evt_SectorVsTiming_Endcap@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
        hist MuonRoI_Evt_SectorVsTiming_Forward@Shifter {
          display = LogZ,Draw=COLZ
          algorithm = TGC_Histogram_Not_Empty
        }
      }
      ###################### TrigPatterns data ####################
      dir TrigPatterns {
        algorithm = TGC_GatherData
        output = MuonDetectors/L1MU/L1MUE/Shifter/MuonRoIs
	hist L1Item_MuonRoI_Eff_EtaVsPhi_.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Efficiency/EtaVsPhi
	}
	hist L1Item_MuonRoI_Eff_Eta_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Efficiency/Eta
	}
	hist L1Item_MuonRoI_Eff_Phi_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Efficiency/Phi
	}
	hist L1Item_MuonRoI_Eff_Pt_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Efficiency/Pt
	}
	hist L1Item_MuonRoI_Evt_EtaVsBW3Coin_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsBW3Coin
	}
	hist L1Item_MuonRoI_Evt_EtaVsGoodMF_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsGoodMF
	}
	hist L1Item_MuonRoI_Evt_EtaVsInnerCoin_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsInnerCoin
	}
	hist L1Item_MuonRoI_Evt_EtaVsIsMoreCand_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsIsMoreCand
	}
	hist L1Item_MuonRoI_Evt_EtaVsPhi_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsPhi
	}
	hist L1Item_MuonRoI_Evt_Eta_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/Eta
	}
	hist L1Item_MuonRoI_Evt_Phi_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/Phi
	}
	hist L1Item_MuonRoI_Evt_EtaVsThrNumber_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/EtaVsThrNumber
	}
	hist L1Item_MuonRoI_Evt_SectorVsRoINumber_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/SectorVsRoINumber
	}
	hist L1Item_MuonRoI_Evt_PhiVsLB_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/thrPatterns/Occupancy/PhiVsLB
	}
        ################# Shifter #####################
	hist L1Item_MuonRoI_Evt_EtaVsPhi_MU3V@Shifter {
          display = LogZ,Draw=COLZ
        }
	hist L1Item_MuonRoI_Evt_EtaVsPhi_MU14FCH@Shifter {
          display = LogZ,Draw=COLZ
        }
	hist L1Item_MuonRoI_Evt_Eta_MU3V@Shifter {
        }
	hist L1Item_MuonRoI_Evt_Eta_MU14FCH@Shifter {
        }
	hist L1Item_MuonRoI_Eff_EtaVsPhi_MU3V@Shifter {
          display = Draw=COLZ
	}
	hist L1Item_MuonRoI_Eff_EtaVsPhi_MU14FCH@Shifter {
          display = Draw=COLZ
	}
	hist L1Item_MuonRoI_Eff_Eta_MU3V@Shifter {
	}
	hist L1Item_MuonRoI_Eff_Eta_MU14FCH@Shifter {
	}
	hist L1Item_MuonRoI_Eff_Pt_TGC_MU3V@Shifter {
	}
	hist L1Item_MuonRoI_Eff_Pt_TGC_MU14FCH@Shifter {
	}

      }
      ###################### TgcCoin data ####################
      dir Coin {
        algorithm = TGC_GatherData
        output = MuonDetectors/L1MU/L1MUE/Shifter/CoinData
        hist SL_Endcap_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/Endcap
        }
        hist SL_Forward_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/Forward
        }
        hist SL_TgcCoin_Eff_EtaVsPhi.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL
        }
        hist SL_TgcCoin_Evt_EtaVsPhi.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL
        }
        hist HPT_Endcap_.*_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/HPT/Endcap
        }
        hist HPT_Forward_.*_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/HPT/Forward
        }
        hist HPT_.*_TgcCoin_Eff_EtaVsPhi.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/HPT
        }
        hist HPT_.*_TgcCoin_Evt_EtaVsPhi.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/HPT
        }
        hist LPT_Endcap_.*_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/LPT/Endcap
        }
        hist LPT_Forward_.*_TgcCoin_Evt_SectorVs.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/LPT/Forward
        }
        hist LPT_.*_TgcCoin_Eff_EtaVsPhi.* {
          display = Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/LPT
        }
        hist LPT_.*_TgcCoin_Evt_EtaVsPhi.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/LPT
        }

        hist InnerCoin_Eff1D_Eifi_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }
        hist InnerCoin_Eff2D_Eifi_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }
        hist InnerCoin_Reduction1D_Eifi_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }
        hist InnerCoin_Reduction2D_Eifi_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }
        hist InnerCoin_Evt1D_Eifi_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }
        hist InnerCoin_Evt2D_Eifi_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinEifi
        }

        hist InnerCoin_Eff1D_Tile_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }
        hist InnerCoin_Eff2D_Tile_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }
        hist InnerCoin_Reduction1D_Tile_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }
        hist InnerCoin_Reduction2D_Tile_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }
        hist InnerCoin_Evt1D_Tile_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }
        hist InnerCoin_Evt2D_Tile_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinTile
        }

        hist InnerCoin_Eff1D_Rpc_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }
        hist InnerCoin_Eff2D_Rpc_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }
        hist InnerCoin_Reduction1D_Rpc_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }
        hist InnerCoin_Reduction2D_Rpc_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }
        hist InnerCoin_Evt1D_Rpc_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }
        hist InnerCoin_Evt2D_Rpc_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinRpc
        }

        hist InnerCoin_Eff1D_Nsw_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }
        hist InnerCoin_Eff2D_Nsw_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }
        hist InnerCoin_Reduction1D_Nsw_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }
        hist InnerCoin_Reduction2D_Nsw_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }
        hist InnerCoin_Evt1D_Nsw_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }
        hist InnerCoin_Evt2D_Nsw_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinNsw
        }

        hist InnerCoin_Eff1D_CoinFlagC_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }
        hist InnerCoin_Eff2D_CoinFlagC_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }
        hist InnerCoin_Reduction1D_CoinFlagC_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }
        hist InnerCoin_Reduction2D_CoinFlagC_.* {
          display = Draw=COLZ
	  output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }
        hist InnerCoin_Evt1D_CoinFlagC_.* {
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }
        hist InnerCoin_Evt2D_CoinFlagC_.* {
          display = LogZ,Draw=COLZ
          output = MuonDetectors/L1MU/L1MUE/Expert/CoinData/SL/InnerCoinC
        }

        ################# Shifter #####################
        hist SL_.*_TgcCoin_Evt_SectorVsLB.*@Shifter {
          display = LogZ,Draw=COLZ
        }
        hist SL_.*_TgcCoin_Evt_SectorVsRoI@Shifter {
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist SL_.*_TgcCoin_Evt_SectorVsRoI_CoinFlag.*@Shifter {
          display = LogZ,Draw=COLZ
        }
        hist SL_.*_TgcCoin_Evt_SectorVsThr@Shifter {
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist SL_.*_TgcCoin_Evt_SectorVsTiming@Shifter {
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist SL_TgcCoin_Eff_EtaVsPhi.*@Shifter {
          display = Draw=COLZ
        }
        hist SL_TgcCoin_Evt_EtaVsPhi@Shifter {
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist SL_TgcCoin_Evt_EtaVsPhi_CoinFlag.*@Shifter {
          display = LogZ,Draw=COLZ
        }
      }
      ###################### Hit occupancy overview ####################
      dir Hit {
        algorithm = TGC_GatherData
        hist TgcPrd_nHits {
          output = MuonDetectors/TGC/Expert/Misc
        }
        hist TgcPrd_Timing {
          output = MuonDetectors/TGC/Expert/Misc
        }
        hist TgcPrd_BWSectorsVsEta.*_All {
          output = MuonDetectors/TGC/Expert/BigWheel/EtaVsPhi
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsLB.*_All {
          output = MuonDetectors/TGC/Expert/BigWheel/LB
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsTiming.*_All {
          output = MuonDetectors/TGC/Expert/BigWheel/Timing/All
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsTiming.*_wTrack {
          output = MuonDetectors/TGC/Expert/BigWheel/Timing/wTrack
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsBCMask.* {
          output = MuonDetectors/TGC/Expert/BigWheel/Timing/Ana
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_GlobalChamberIndexVsLB_.* {
          output = MuonDetectors/TGC/Expert/Details/LB
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_GlobalChamberIndexVsTiming_All_.* {
          output = MuonDetectors/TGC/Expert/Details/Timing/All
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_GlobalChamberIndexVsTiming_wTrack_.* {
          output = MuonDetectors/TGC/Expert/Details/Timing/wTrack
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_GlobalChamberIndexVsBCMask_.* {
          output = MuonDetectors/TGC/Expert/Details/Timing/Ana
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_iPhiVsiEta_.* {
          output = MuonDetectors/TGC/Expert/Details/EtaVsPhi
          display = LogZ,Draw=COLZ
        }
        ################# Shifter #####################
        hist TgcPrd_BWSectorsVsTiming_.*_wTrack@Shifter {
          output = MuonDetectors/TGC/Shifter/Timing
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsEta_.*_All@Shifter {
          output = MuonDetectors/TGC/Shifter/Occ
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
        hist TgcPrd_BWSectorsVsLB_.*_All@Shifter {
          output = MuonDetectors/TGC/Shifter/LB
          algorithm = TGC_Histogram_Not_Empty
          display = LogZ,Draw=COLZ
        }
      }
      ###################### Muon ####################
      dir Muon {
        output = MuonDetectors/TGC/Expert/Muons
        algorithm = TGC_GatherData
        hist .* {
        }
      }
      ###################### EventInfo ####################
      dir EventInfo {
        output = MuonDetectors/TGC/Expert/EventInfo
        algorithm = TGC_GatherData
        hist .* {
        }
      }
      ###################### Hit efficiency ####################
      dir HitEff {
        algorithm = TGC_GatherData
        hist TgcPrd_iPhiVsiEta_Efficiency.* {
          display = Draw=COLZ
          output = MuonDetectors/TGC/Expert/Efficiency/EtaVsPhi
        }
        hist TgcPrd_GlobalChamberIndex_Efficiency.* {
          output = MuonDetectors/TGC/Expert/Efficiency/Overview
        }
      }
      ###################### Hit residuals ####################
      dir Residuals {
        algorithm = TGC_GatherData
        hist TgcPrd_Residual_(?P<res_anysector>[AC][0-9]{2})M0[123].* {
          output = MuonDetectors/TGC/Expert/Residuals/${res_anysector}
        }
        hist TgcPrd_Residual_(?P<res_side>[AC]).*M04.* {
          output = MuonDetectors/TGC/Expert/Residuals/${res_side}EIFI
        }
      }
      ###################### Hit occupancy (channel-by-channel) ####################
      dir GapByGapHits {
        algorithm = TGC_GatherData
        hist TgcPrd_ChannelOccupancy_(?P<occ_anysector>[AC][0-9]{2})M0[123].* {
          output = MuonDetectors/TGC/Expert/GapByGapOcc/${occ_anysector}
        }
        hist TgcPrd_ChannelOccupancy_(?P<occ_side>[AC]).*M04.* {
          output = MuonDetectors/TGC/Expert/GapByGapOcc/${occ_side}EIFI
        }
      }
    }
  }
}

#############
# Output
#############

output top_level {
  algorithm = TGC_WorstCaseSummary
  output MuonDetectors {
    output L1MU {
      output L1MUE {
        output Expert {
          algorithm = TGC_AlwaysGreenSummary
          output MuonRoIs {
            output Flags {
              output ChargeFlag {
              }
              output BW3CoinFlag {
                output wBW3Coin {
                }
                output wBW3CoinVeto {
                }
              }
              output InnerCoinFlag {
                output wInnerCoin {
                }
                output wInnerCoinVeto {
                }
              }
              output GoodMFFlag {
                output wGoodMF {
                }
                output wBadMF {
                }
              }
              output IsMoreCand {
              }
            } # Flags
            output Occupancy {
              output Eta {
              }
              output Phi {
              }
              output PhiVsLB {
              }
              output EtaVsPhi {
              }
              output Thresholds {
              }
              output SectorVsThreshold {
              }
              output SectorVsRoINumber {
              }
              output Timing {
              }
            } # Occupancy
            output Efficiency {
              output Pt {
              }
              output Eta {
              }
              output Phi {
              }
              output EtaVsPhi {
              }
	      output PtVsPhi {
	      } # PtVsPhi
            } # Efficiency
          } # MuonRoIs
	  output thrPatterns {
	    output Efficiency {
	      output EtaVsPhi {
	      } # EtaVsPhi
	      output Eta {
	      } # Eta
	      output Phi {
	      } # Phi
	      output Pt {
	      } # Pt
	    } # Efficiency
	    output Occupancy {
	      output EtaVsBW3Coin {
	      } # EtaVsBW3Coin
	      output EtaVsGoodMF {
	      } # EtaVsGoodMF
	      output EtaVsInnerCoin {
	      } # EtaVsInnerCoin
	      output EtaVsIsMoreCand {
	      } # EtaVsIsMoreCand
	      output EtaVsPhi {
	      } # EtaVsPhi
	      output Eta {
	      } # Eta
	      output Phi {
	      } # Phi
	      output EtaVsThrNumber {
	      } # EtaVsThrNumber
	      output SectorVsRoINumber {
	      } # SectorVsRoINumber
	      output PhiVsLB {
	      } # PhiVsLB
	    } # Occupancy
	  } # thrPatterns
          output CoinData {
            output SL {
              output Endcap {
              }
              output Forward {
              }
              output InnerCoinEifi {
              }
              output InnerCoinTile {
              }
              output InnerCoinRpc {
              }
              output InnerCoinNsw {
              }
              output InnerCoinC {
              }
            }
            output HPT {
              output Endcap {
              }
              output Forward {
              }
            }
            output LPT {
              output Endcap {
              }
              output Forward {
              }
            }
          } # CoinData
        } # Expert
        output Shifter {
          output MuonRoIs {
          }
          output CoinData {
          }
        } # Shifter
      } # L1MUE
    } # L1MU
    output TGC {
      output Expert {
        algorithm = TGC_AlwaysGreenSummary
        output Efficiency {
          output EtaVsPhi {
          }
          output Overview {
          }
        } # Efficiency
        output BigWheel {
          output EtaVsPhi {
          }
          output LB {
          }
          output Timing {
            output All {
            }
            output wTrack {
            }
            output Ana {
            }
          }
        } # BigWheel
        output Details {
          output EtaVsPhi {
          }
          output LB {
          }
          output Timing {
            output All {
            }
            output wTrack {
            }
            output Ana {
            }
          }
        } # Details
        output EventInfo {
        } # EventInfo
        output Muons {
        } # Muons
        output Misc {
        } # Misc
        output Residuals {
          output ${res_anysector} {
          }
          output ${res_side}EIFI {
          }
        } # Residuals
        output GapByGapOcc {
          output ${occ_anysector} {
          }
          output ${occ_side}EIFI {
          }
        } # GapByGapOcc
      } # Expert
      output Shifter {
        output Occ {
        }
        output LB {
        }
        output Timing {
        }
      } # Shifter
    } # TGC
  } # MuonDetectors
} # top_level

