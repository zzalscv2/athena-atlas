# Copyright (C) 2002-2023 CERN for the benefit of the ATLAS collaboration

# This script genrates a json file containing the Micromegas cabling correction map

import json

def zebraChannels(zebra):
    '''
    Returns a tuple with the first and the last channel in a MM zebra connector.

        Parameters:
            zebra (int) identifies the zebra connector number within a layer. Counting from 0 to 31
        
        Returns:
            tuple containing the first and the last strip of a given zebra connector
    '''

    # One zebra connector covers 256 channels
    # The athena channel numbering starts from 1
    # The athena channel numbering restarts from 1 for the second quadruplet (zebra connectors 20 to 31)

    if(zebra>19): zebra -= 20 # zebra counting covers a full layer of a sector while the channel numbering restarts in the second quadruplet
    firstChannel = zebra*256 + 1
    lastChannel = (zebra+1)*256
    return (firstChannel, lastChannel)

def MMFE8Channels(mmfe8):
    '''
    Returns a tuple with the first and the last channel in an MMFE (Micromegas front end board).

        Parameters:
            mmfe8 (int) identifies the zebra connector number within a layer. Counting from 0 to 15
        
        Returns:
            tuple containing the first and the last strip of a given MMFE8
    '''

    # One MMFE8 covers 512 channels
    # The athena channel numbering starts from 1
    # The athena channel numbering restarts from 1 for the second quadruplet (MMFE8s 10 to 15)

    if(mmfe8>9): mmfe8 -= 10 # MMFE8 counting covers a full layer of a sector while the channel numbering restarts in the second quadruplet
    firstChannel = mmfe8*512 + 1
    lastChannel = (mmfe8+1)*512
    return (firstChannel, lastChannel)



def addZebra(side, sector, layer, zebra, shift):
    '''
    Returns a dictionary which represents a shift of a zebra connector

        Parameters:
            side (string) identifies the wheel: possible values "A" and "C"
            sector (int) identifies the sector counting from 1 to 16
            layer (int) identifies the detector layer whithin a given sector. Counts from 1 to 8
            zebra (int) identifies the zebra connector number within a layer. Counting from 0 to 31
            shift (int) indicates by how much and in which direction the channels in a given connector should be moved
        
        Returns:
            dictionary with the fields that the NSW cabling alg will use to apply the shift
    '''
    ret = dict()
    ret["station"] = ("MML" if sector%2==1 else "MMS") # the even sectors are the small ones
    ret["eta"] = (-1 if side == "C" else 1) * (1 if zebra < 20  else 2) # side C is indicated by a negative station eta while side A by a positive one. The first station eta (or quadruplet) consist of 5 PCBs per layer which corresponds to zebra connectors 0 to 19. Connector 20 to 31 are reading out abs(stationEta) 2
    ret["phi"] = (sector-1)//2 + 1
    ret["multilayer"] = (1 if layer <=4 else 2) # each multilayer consists of 4 layers
    ret["gasgap"] = ((layer-1)%4) +1 # counting from 1 to 4
    ret["FirstZebra"], ret["LastZebra"] = zebraChannels(zebra)
    ret["ZebraShift"] = shift
    return ret

def addMMFE8(side, sector, layer, mmfe8, shift):
    '''
    Returns a dictionary which represents a shift of a zebra connector

        Parameters:
            side (string) identifies the wheel: possible values "A" and "C"
            sector (int) identifies the sector counting from 1 to 16
            layer (int) identifies the detector layer whithin a given sector. Counts from 1 to 8
            mmfe8 (int) identifies the MMFE8 number within a layer. Counting from 0 to 15
            shift (int) indicates by how much and in which direction the channels in a given connector should be moved
        
        Returns:
            dictionary with the fields that the NSW cabling alg will use to apply the shift
    '''
    ret = dict()
    ret["station"] = ("MML" if sector%2==1 else "MMS") # the even sectors are the small ones
    ret["eta"] = (-1 if side == "C" else 1) * (1 if mmfe8 < 10  else 2) # side C is indicated by a negative station eta while side A by a positive one. The first station eta (or quadruplet) consist of 5 PCBs per layer which corresponds to MMFE8s 0 to 9. MMFE8 10 to 15 are reading out abs(stationEta) 2
    ret["phi"] = (sector-1)//2 + 1
    ret["multilayer"] = (1 if layer <=4 else 2) # each multilayer consists of 4 layers
    ret["gasgap"] = ((layer-1)%4) +1 # counting from 1 to 4
    ret["FirstZebra"], ret["LastZebra"] = MMFE8Channels(mmfe8)
    ret["ZebraShift"] = shift
    return ret





if __name__ == "__main__":
    # for now we generate some dummy shifts for testing
    outList = []
    outList.append(addZebra("A",3,1,13,-1))
    outList.append(addZebra("A",3,1,12,-1))
    outList.append(addZebra("A",6,1,5,-1))
    outList.append(addZebra("A",7,1,3,1))
    outList.append(addZebra("A",7,1,2,1))
    outList.append(addZebra("A",10,1,23,-1))
    outList.append(addZebra("A",10,1,22,-1))
    outList.append(addZebra("A",11,1,3,1))
    outList.append(addZebra("A",11,1,2,1))
    outList.append(addZebra("A",12,1,15,-1))
    outList.append(addZebra("A",12,1,14,-1))
    outList.append(addZebra("A",14,1,23,-1))
    outList.append(addZebra("A",14,1,22,-1))
    outList.append(addZebra("A",14,1,15,1))
    outList.append(addZebra("A",14,1,14,1))
    outList.append(addZebra("A",14,1,5,1))
    outList.append(addZebra("A",14,1,4,1))
    outList.append(addZebra("A",16,1,17,1))
    outList.append(addZebra("A",16,1,16,1))
    outList.append(addZebra("A",4,2,11,-1))
    outList.append(addZebra("A",4,2,10,-1))
    outList.append(addZebra("A",6,2,5,-1))
    outList.append(addZebra("A",6,2,4,-1))
    outList.append(addZebra("A",10,2,25,1))
    outList.append(addZebra("A",10,2,24,1))
    outList.append(addZebra("A",13,2,1,1))
    outList.append(addZebra("A",13,2,0,1))
    outList.append(addZebra("A",14,2,9,1))
    outList.append(addZebra("A",14,2,8,1))
    outList.append(addZebra("A",2,3,3,1))
    outList.append(addZebra("A",2,3,2,1))
    outList.append(addZebra("A",3,3,19,1))
    outList.append(addZebra("A",3,3,15,2))
    outList.append(addZebra("A",3,3,14,2))
    outList.append(addZebra("A",3,3,1,1))
    outList.append(addZebra("A",3,3,0,1))
    outList.append(addZebra("A",5,3,11,1))
    outList.append(addZebra("A",5,3,10,1))
    outList.append(addZebra("A",6,3,15,1))
    outList.append(addZebra("A",6,3,14,1))
    outList.append(addZebra("A",6,3,9,-1))
    outList.append(addZebra("A",6,3,8,-1))
    outList.append(addZebra("A",7,3,17,-1))
    outList.append(addZebra("A",7,3,16,-1))
    outList.append(addZebra("A",7,3,15,1))
    outList.append(addZebra("A",7,3,14,1))
    outList.append(addZebra("A",7,3,7,1))
    outList.append(addZebra("A",7,3,6,1))
    outList.append(addZebra("A",7,3,3,1))
    outList.append(addZebra("A",7,3,2,1))
    outList.append(addZebra("A",11,3,7,1))
    outList.append(addZebra("A",11,3,6,1))
    outList.append(addZebra("A",14,3,13,1))
    outList.append(addZebra("A",14,3,12,1))
    outList.append(addZebra("A",14,3,11,-1))
    outList.append(addZebra("A",14,3,10,-1))
    outList.append(addZebra("A",2,4,15,-1))
    outList.append(addZebra("A",2,4,14,-1))
    outList.append(addZebra("A",2,4,11,1))
    outList.append(addZebra("A",2,4,10,1))
    outList.append(addZebra("A",3,4,15,1))
    outList.append(addZebra("A",3,4,14,1))
    outList.append(addZebra("A",3,4,5,1))
    outList.append(addZebra("A",3,4,4,1))
    outList.append(addZebra("A",4,4,11,1))
    outList.append(addZebra("A",4,4,10,1))
    outList.append(addZebra("A",5,4,27,-1))
    outList.append(addZebra("A",5,4,26,-1))
    outList.append(addZebra("A",5,4,25,-1))
    outList.append(addZebra("A",5,4,24,-1))
    outList.append(addZebra("A",5,4,17,-1))
    outList.append(addZebra("A",5,4,16,-1))
    outList.append(addZebra("A",5,4,1,-1))
    outList.append(addZebra("A",5,4,0,-1))
    outList.append(addZebra("A",8,4,29,1))
    outList.append(addZebra("A",8,4,28,1))
    outList.append(addZebra("A",14,4,19,-1))
    outList.append(addZebra("A",14,4,18,-1))
    outList.append(addZebra("A",14,4,17,1))
    outList.append(addZebra("A",14,4,16,1))
    outList.append(addZebra("A",14,4,13,-2))
    outList.append(addZebra("A",14,4,12,-2))
    outList.append(addZebra("A",14,4,11,1))
    outList.append(addZebra("A",14,4,10,1))
    outList.append(addZebra("A",14,4,9,-1))
    outList.append(addZebra("A",14,4,8,-1))
    outList.append(addZebra("A",14,4,7,-1))
    outList.append(addZebra("A",14,4,6,-1))
    outList.append(addZebra("A",16,4,9,-1))
    outList.append(addZebra("A",16,4,8,-1))
    outList.append(addZebra("A",16,4,7,1))
    outList.append(addZebra("A",16,4,6,1))
    outList.append(addZebra("A",16,4,3,1))
    outList.append(addZebra("A",16,4,2,1))
    outList.append(addZebra("A",2,5,19,1))
    outList.append(addZebra("A",2,5,18,1))
    outList.append(addZebra("A",2,5,15,1))
    outList.append(addZebra("A",2,5,14,1))
    outList.append(addZebra("A",2,5,11,1))
    outList.append(addZebra("A",2,5,10,1))
    outList.append(addZebra("A",2,5,3,1))
    outList.append(addZebra("A",2,5,2,1))
    outList.append(addZebra("A",4,5,13,1))
    outList.append(addZebra("A",4,5,12,1))
    outList.append(addZebra("A",4,5,11,1))
    outList.append(addZebra("A",4,5,10,1))
    outList.append(addZebra("A",7,5,27,1))
    outList.append(addZebra("A",7,5,26,1))
    outList.append(addZebra("A",7,5,25,1))
    outList.append(addZebra("A",7,5,24,1))
    outList.append(addZebra("A",8,5,15,1))
    outList.append(addZebra("A",8,5,14,1))
    outList.append(addZebra("A",9,5,27,1))
    outList.append(addZebra("A",9,5,26,1))
    outList.append(addZebra("A",9,5,23,-1))
    outList.append(addZebra("A",9,5,22,-1))
    outList.append(addZebra("A",10,5,15,-1))
    outList.append(addZebra("A",10,5,14,-1))
    outList.append(addZebra("A",13,5,19,1))
    outList.append(addZebra("A",13,5,18,1))
    outList.append(addZebra("A",14,5,15,1))
    outList.append(addZebra("A",14,5,14,1))
    outList.append(addZebra("A",16,5,17,1))
    outList.append(addZebra("A",16,5,16,1))
    outList.append(addZebra("A",1,6,15,2))
    outList.append(addZebra("A",1,6,14,2))
    outList.append(addZebra("A",1,6,7,1))
    outList.append(addZebra("A",1,6,6,1))
    outList.append(addZebra("A",2,6,19,-1))
    outList.append(addZebra("A",2,6,18,-1))
    outList.append(addZebra("A",2,6,15,1))
    outList.append(addZebra("A",2,6,14,1))
    outList.append(addZebra("A",2,6,11,1))
    outList.append(addZebra("A",2,6,10,1))
    outList.append(addZebra("A",3,6,17,-1))
    outList.append(addZebra("A",3,6,16,-1))
    outList.append(addZebra("A",3,6,9,-1))
    outList.append(addZebra("A",3,6,8,-1))
    outList.append(addZebra("A",5,6,19,1))
    outList.append(addZebra("A",5,6,18,1))
    outList.append(addZebra("A",5,6,9,-1))
    outList.append(addZebra("A",5,6,8,-1))
    outList.append(addZebra("A",6,6,15,-1))
    outList.append(addZebra("A",6,6,14,-1))
    outList.append(addZebra("A",6,6,11,1))
    outList.append(addZebra("A",6,6,10,1))
    outList.append(addZebra("A",6,6,9,-1))
    outList.append(addZebra("A",6,6,8,-1))
    outList.append(addZebra("A",6,6,5,-1))
    outList.append(addZebra("A",6,6,4,-1))
    outList.append(addZebra("A",8,6,15,1))
    outList.append(addZebra("A",8,6,14,1))
    outList.append(addZebra("A",8,6,13,-1))
    outList.append(addZebra("A",8,6,12,-1))
    outList.append(addZebra("A",8,6,11,1))
    outList.append(addZebra("A",8,6,10,1))
    outList.append(addZebra("A",8,6,9,1))
    outList.append(addZebra("A",8,6,8,1))
    outList.append(addZebra("A",8,6,5,-1))
    outList.append(addZebra("A",8,6,4,-1))
    outList.append(addZebra("A",8,6,1,1))
    outList.append(addZebra("A",8,6,0,1))
    outList.append(addZebra("A",9,6,19,1))
    outList.append(addZebra("A",9,6,18,1))
    outList.append(addZebra("A",10,6,5,-1))
    outList.append(addZebra("A",10,6,4,-1))
    outList.append(addZebra("A",12,6,17,-1))
    outList.append(addZebra("A",12,6,16,-1))
    outList.append(addZebra("A",12,6,13,-1))
    outList.append(addZebra("A",12,6,12,-1))
    outList.append(addZebra("A",12,6,1,-1))
    outList.append(addZebra("A",12,6,0,-1))
    outList.append(addZebra("A",13,6,9,-1))
    outList.append(addZebra("A",13,6,8,-1))
    outList.append(addZebra("A",14,6,19,3))
    outList.append(addZebra("A",14,6,18,3))
    outList.append(addZebra("A",14,6,17,2))
    outList.append(addZebra("A",14,6,16,2))
    outList.append(addZebra("A",14,6,13,1))
    outList.append(addZebra("A",14,6,12,1))
    outList.append(addZebra("A",14,6,11,1))
    outList.append(addZebra("A",14,6,10,1))
    outList.append(addZebra("A",14,6,9,1))
    outList.append(addZebra("A",14,6,8,1))
    outList.append(addZebra("A",14,6,7,1))
    outList.append(addZebra("A",14,6,6,1))
    outList.append(addZebra("A",14,6,5,2))
    outList.append(addZebra("A",14,6,4,2))
    outList.append(addZebra("A",14,6,3,1))
    outList.append(addZebra("A",14,6,2,1))
    outList.append(addZebra("A",14,6,1,1))
    outList.append(addZebra("A",14,6,0,1))
    outList.append(addZebra("A",1,7,16,-1))
    outList.append(addZebra("A",1,7,12,-1))
    outList.append(addZebra("A",1,7,11,1))
    outList.append(addZebra("A",1,7,10,1))
    outList.append(addZebra("A",1,7,3,1))
    outList.append(addZebra("A",2,7,23,1))
    outList.append(addZebra("A",2,7,22,1))
    outList.append(addZebra("A",15,7,19,-1))
    outList.append(addZebra("A",15,7,18,-1))
    outList.append(addZebra("A",5,8,21,1))
    outList.append(addZebra("A",5,8,20,1))
    outList.append(addZebra("A",5,8,15,1))
    outList.append(addZebra("A",5,8,14,1))
    outList.append(addZebra("A",6,8,3,1))
    outList.append(addZebra("A",6,8,2,1))
    outList.append(addZebra("A",7,8,8,-1))
    outList.append(addZebra("A",9,8,7,1))
    outList.append(addZebra("A",9,8,6,1))
    outList.append(addZebra("A",9,8,3,1))
    outList.append(addZebra("A",9,8,2,1))
    outList.append(addZebra("A",11,8,23,1))
    outList.append(addZebra("A",11,8,22,1))
    outList.append(addZebra("A",12,8,7,-1))
    outList.append(addZebra("A",12,8,6,-1))
    outList.append(addZebra("A",12,8,5,1))
    outList.append(addZebra("A",12,8,4,1))
    outList.append(addZebra("A",14,8,15,1))
    outList.append(addZebra("A",14,8,14,1))
    outList.append(addZebra("A",14,8,3,1))
    outList.append(addZebra("A",16,8,13,-1))
    outList.append(addZebra("A",16,8,12,-1))
    outList.append(addZebra("C",1,1,11,1))
    outList.append(addZebra("C",1,1,10,1))
    outList.append(addZebra("C",2,1,15,1))
    outList.append(addZebra("C",2,1,14,1))
    outList.append(addZebra("C",2,1,13,1))
    outList.append(addZebra("C",2,1,12,1))
    outList.append(addZebra("C",2,1,9,-1))
    outList.append(addZebra("C",2,1,8,-1))
    outList.append(addZebra("C",2,1,7,1))
    outList.append(addZebra("C",2,1,6,1))
    outList.append(addZebra("C",3,1,17,-1))
    outList.append(addZebra("C",3,1,16,-1))
    outList.append(addZebra("C",4,1,13,-1))
    outList.append(addZebra("C",4,1,12,-1))
    outList.append(addZebra("C",9,1,7,1))
    outList.append(addZebra("C",9,1,6,1))
    outList.append(addZebra("C",10,1,19,-1))
    outList.append(addZebra("C",10,1,18,-1))
    outList.append(addZebra("C",10,1,17,-1))
    outList.append(addZebra("C",10,1,16,-1))
    outList.append(addZebra("C",12,1,17,-1))
    outList.append(addZebra("C",12,1,16,-1))
    outList.append(addZebra("C",12,1,15,1))
    outList.append(addZebra("C",12,1,14,1))
    outList.append(addZebra("C",14,1,7,1))
    outList.append(addZebra("C",14,1,6,1))
    outList.append(addZebra("C",15,1,11,1))
    outList.append(addZebra("C",15,1,10,1))
    outList.append(addZebra("C",15,1,7,1))
    outList.append(addZebra("C",15,1,6,1))
    outList.append(addZebra("C",2,2,25,-1))
    outList.append(addZebra("C",2,2,24,-1))
    outList.append(addZebra("C",2,2,11,1))
    outList.append(addZebra("C",2,2,10,1))
    outList.append(addZebra("C",3,2,9,-1))
    outList.append(addZebra("C",3,2,8,-1))
    outList.append(addZebra("C",6,2,9,-1))
    outList.append(addZebra("C",6,2,8,-1))
    outList.append(addZebra("C",8,2,17,-1))
    outList.append(addZebra("C",8,2,16,-1))
    outList.append(addZebra("C",8,2,9,-1))
    outList.append(addZebra("C",8,2,8,-1))
    outList.append(addZebra("C",9,2,11,1))
    outList.append(addZebra("C",9,2,4,-1))
    outList.append(addZebra("C",10,2,15,1))
    outList.append(addZebra("C",10,2,14,2))
    outList.append(addZebra("C",10,2,3,1))
    outList.append(addZebra("C",10,2,2,1))
    outList.append(addZebra("C",11,2,17,-1))
    outList.append(addZebra("C",11,2,16,-1))
    outList.append(addZebra("C",11,2,13,-1))
    outList.append(addZebra("C",11,2,12,-1))
    outList.append(addZebra("C",13,2,23,1))
    outList.append(addZebra("C",13,2,22,1))
    outList.append(addZebra("C",13,2,13,-1))
    outList.append(addZebra("C",13,2,12,-1))
    outList.append(addZebra("C",13,2,4,-1))
    outList.append(addZebra("C",15,2,7,1))
    outList.append(addZebra("C",15,2,6,1))
    outList.append(addZebra("C",15,2,3,1))
    outList.append(addZebra("C",15,2,2,1))
    outList.append(addZebra("C",16,2,19,1))
    outList.append(addZebra("C",16,2,18,1))
    outList.append(addZebra("C",16,2,15,1))
    outList.append(addZebra("C",16,2,14,1))
    outList.append(addZebra("C",16,2,11,1))
    outList.append(addZebra("C",16,2,10,1))
    outList.append(addZebra("C",16,2,9,-1))
    outList.append(addZebra("C",16,2,8,-1))
    outList.append(addZebra("C",16,2,3,1))
    outList.append(addZebra("C",16,2,2,1))
    outList.append(addZebra("C",1,3,4,-1))
    outList.append(addZebra("C",2,3,11,-1))
    outList.append(addZebra("C",2,3,10,-1))
    outList.append(addZebra("C",2,3,5,-1))
    outList.append(addZebra("C",2,3,4,-1))
    outList.append(addZebra("C",4,3,1,-1))
    outList.append(addZebra("C",4,3,0,-1))
    outList.append(addZebra("C",5,3,7,1))
    outList.append(addZebra("C",5,3,6,1))
    outList.append(addZebra("C",6,3,23,-1))
    outList.append(addZebra("C",6,3,22,-1))
    outList.append(addZebra("C",9,3,23,-1))
    outList.append(addZebra("C",9,3,22,-1))
    outList.append(addZebra("C",9,3,19,2))
    outList.append(addZebra("C",9,3,18,2))
    outList.append(addZebra("C",9,3,7,1))
    outList.append(addZebra("C",9,3,6,1))
    outList.append(addZebra("C",9,3,3,1))
    outList.append(addZebra("C",9,3,2,1))
    outList.append(addZebra("C",10,3,28,-1))
    outList.append(addZebra("C",10,3,9,1))
    outList.append(addZebra("C",10,3,8,1))
    outList.append(addZebra("C",11,3,7,1))
    outList.append(addZebra("C",13,3,25,1))
    outList.append(addZebra("C",13,3,24,1))
    outList.append(addZebra("C",14,3,17,-1))
    outList.append(addZebra("C",14,3,16,-1))
    outList.append(addZebra("C",15,3,12,-1))
    outList.append(addZebra("C",16,3,3,1))
    outList.append(addZebra("C",16,3,2,1))
    outList.append(addZebra("C",1,4,15,1))
    outList.append(addZebra("C",1,4,1,-1))
    outList.append(addZebra("C",1,4,0,-1))
    outList.append(addZebra("C",2,4,11,1))
    outList.append(addZebra("C",2,4,10,1))
    outList.append(addZebra("C",2,4,7,1))
    outList.append(addZebra("C",3,4,11,1))
    outList.append(addZebra("C",3,4,10,1))
    outList.append(addZebra("C",4,4,11,1))
    outList.append(addZebra("C",7,4,21,1))
    outList.append(addZebra("C",7,4,20,1))
    outList.append(addZebra("C",7,4,13,-1))
    outList.append(addZebra("C",7,4,12,-1))
    outList.append(addZebra("C",7,4,11,-1))
    outList.append(addZebra("C",7,4,10,-1))
    outList.append(addZebra("C",7,4,9,-1))
    outList.append(addZebra("C",7,4,8,-1))
    outList.append(addZebra("C",7,4,7,1))
    outList.append(addZebra("C",7,4,6,1))
    outList.append(addZebra("C",12,4,15,1))
    outList.append(addZebra("C",12,4,14,1))
    outList.append(addZebra("C",12,4,13,1))
    outList.append(addZebra("C",12,4,12,1))
    outList.append(addZebra("C",12,4,9,-1))
    outList.append(addZebra("C",12,4,8,-1))
    outList.append(addZebra("C",13,4,19,1))
    outList.append(addZebra("C",13,4,18,1))
    outList.append(addZebra("C",13,4,15,2))
    outList.append(addZebra("C",13,4,14,2))
    outList.append(addZebra("C",13,4,11,1))
    outList.append(addZebra("C",13,4,10,1))
    outList.append(addZebra("C",13,4,7,1))
    outList.append(addZebra("C",13,4,6,1))
    outList.append(addZebra("C",13,4,3,1))
    outList.append(addZebra("C",13,4,2,1))
    outList.append(addZebra("C",14,4,11,1))
    outList.append(addZebra("C",14,4,10,1))
    outList.append(addZebra("C",14,4,9,-1))
    outList.append(addZebra("C",14,4,8,-1))
    outList.append(addZebra("C",16,4,19,1))
    outList.append(addZebra("C",16,4,18,1))
    outList.append(addZebra("C",16,4,15,1))
    outList.append(addZebra("C",16,4,14,1))
    outList.append(addZebra("C",16,4,12,-1))
    outList.append(addZebra("C",16,4,7,1))
    outList.append(addZebra("C",16,4,6,1))
    outList.append(addZebra("C",16,4,5,-1))
    outList.append(addZebra("C",16,4,4,-1))
    outList.append(addZebra("C",16,4,0,1))
    outList.append(addZebra("C",2,5,15,1))
    outList.append(addZebra("C",2,5,14,1))
    outList.append(addZebra("C",2,5,9,-1))
    outList.append(addZebra("C",2,5,8,-1))
    outList.append(addZebra("C",2,5,7,1))
    outList.append(addZebra("C",2,5,6,1))
    outList.append(addZebra("C",2,5,3,1))
    outList.append(addZebra("C",2,5,2,1))
    outList.append(addZebra("C",3,5,8,-1))
    outList.append(addZebra("C",3,5,3,-1))
    outList.append(addZebra("C",3,5,2,-1))
    outList.append(addZebra("C",4,5,11,-1))
    outList.append(addZebra("C",4,5,10,-1))
    outList.append(addZebra("C",4,5,5,1))
    outList.append(addZebra("C",4,5,4,1))
    outList.append(addZebra("C",6,5,3,1))
    outList.append(addZebra("C",6,5,2,1))
    outList.append(addZebra("C",7,5,15,-1))
    outList.append(addZebra("C",7,5,14,-1))
    outList.append(addZebra("C",7,5,11,-1))
    outList.append(addZebra("C",7,5,10,-1))
    outList.append(addZebra("C",7,5,7,-1))
    outList.append(addZebra("C",7,5,6,-1))
    outList.append(addZebra("C",7,5,3,-1))
    outList.append(addZebra("C",7,5,2,-1))
    outList.append(addZebra("C",8,5,19,1))
    outList.append(addZebra("C",8,5,18,1))
    outList.append(addZebra("C",8,5,5,-1))
    outList.append(addZebra("C",8,5,4,-1))
    outList.append(addZebra("C",8,5,3,2))
    outList.append(addZebra("C",8,5,2,2))
    outList.append(addZebra("C",10,5,7,1))
    outList.append(addZebra("C",10,5,6,1))
    outList.append(addZebra("C",10,5,3,1))
    outList.append(addZebra("C",10,5,2,1))
    outList.append(addZebra("C",11,5,9,-1))
    outList.append(addZebra("C",11,5,8,-1))
    outList.append(addZebra("C",11,5,1,-1))
    outList.append(addZebra("C",11,5,0,-1))
    outList.append(addZebra("C",12,5,16,-1))
    outList.append(addZebra("C",12,5,7,1))
    outList.append(addZebra("C",12,5,6,1))
    outList.append(addZebra("C",12,5,3,-1))
    outList.append(addZebra("C",12,5,2,-1))
    outList.append(addZebra("C",12,5,1,-1))
    outList.append(addZebra("C",12,5,0,-1))
    outList.append(addZebra("C",13,5,11,1))
    outList.append(addZebra("C",13,5,10,1))
    outList.append(addZebra("C",16,5,14,1))
    outList.append(addZebra("C",16,5,5,1))
    outList.append(addZebra("C",16,5,4,1))
    outList.append(addZebra("C",1,6,15,-1))
    outList.append(addZebra("C",1,6,14,-1))
    outList.append(addZebra("C",2,6,9,-1))
    outList.append(addZebra("C",2,6,8,-1))
    outList.append(addZebra("C",2,6,7,-1))
    outList.append(addZebra("C",2,6,6,-1))
    outList.append(addZebra("C",2,6,5,-1))
    outList.append(addZebra("C",2,6,4,-1))
    outList.append(addZebra("C",3,6,19,1))
    outList.append(addZebra("C",3,6,18,1))
    outList.append(addZebra("C",3,6,15,1))
    outList.append(addZebra("C",3,6,14,1))
    outList.append(addZebra("C",5,6,25,-1))
    outList.append(addZebra("C",5,6,24,-1))
    outList.append(addZebra("C",6,6,5,-2))
    outList.append(addZebra("C",6,6,4,-2))
    outList.append(addZebra("C",6,6,3,1))
    outList.append(addZebra("C",6,6,1,-1))
    outList.append(addZebra("C",6,6,0,-1))
    outList.append(addZebra("C",7,6,23,2))
    outList.append(addZebra("C",7,6,22,2))
    outList.append(addZebra("C",7,6,11,2))
    outList.append(addZebra("C",7,6,10,2))
    outList.append(addZebra("C",8,6,25,-1))
    outList.append(addZebra("C",8,6,24,-1))
    outList.append(addZebra("C",8,6,7,1))
    outList.append(addZebra("C",8,6,6,1))
    outList.append(addZebra("C",9,6,15,-1))
    outList.append(addZebra("C",9,6,14,-1))
    outList.append(addZebra("C",10,6,13,-1))
    outList.append(addZebra("C",10,6,12,-1))
    outList.append(addZebra("C",10,6,5,-1))
    outList.append(addZebra("C",10,6,4,-1))
    outList.append(addZebra("C",10,6,1,-1))
    outList.append(addZebra("C",10,6,0,-1))
    outList.append(addZebra("C",11,6,12,-1))
    outList.append(addZebra("C",11,6,7,1))
    outList.append(addZebra("C",11,6,6,1))
    outList.append(addZebra("C",12,6,21,-1))
    outList.append(addZebra("C",12,6,20,-1))
    outList.append(addZebra("C",12,6,7,1))
    outList.append(addZebra("C",13,6,17,-1))
    outList.append(addZebra("C",15,6,19,1))
    outList.append(addZebra("C",15,6,18,1))
    outList.append(addZebra("C",16,6,16,-1))
    outList.append(addZebra("C",16,6,13,-1))
    outList.append(addZebra("C",16,6,12,-1))
    outList.append(addZebra("C",2,7,12,-1))
    outList.append(addZebra("C",2,7,7,1))
    outList.append(addZebra("C",2,7,6,1))
    outList.append(addZebra("C",2,7,3,1))
    outList.append(addZebra("C",2,7,2,1))
    outList.append(addZebra("C",3,7,3,-1))
    outList.append(addZebra("C",3,7,2,-1))
    outList.append(addZebra("C",6,7,7,1))
    outList.append(addZebra("C",6,7,6,1))
    outList.append(addZebra("C",7,7,23,1))
    outList.append(addZebra("C",7,7,22,1))
    outList.append(addZebra("C",7,7,21,1))
    outList.append(addZebra("C",7,7,20,1))
    outList.append(addZebra("C",7,7,1,-1))
    outList.append(addZebra("C",7,7,0,-1))
    outList.append(addZebra("C",8,7,17,-1))
    outList.append(addZebra("C",8,7,16,-1))
    outList.append(addZebra("C",8,7,15,1))
    outList.append(addZebra("C",8,7,14,1))
    outList.append(addZebra("C",8,7,11,1))
    outList.append(addZebra("C",8,7,10,1))
    outList.append(addZebra("C",8,7,1,-3))
    outList.append(addZebra("C",8,7,0,-3))
    outList.append(addZebra("C",9,7,21,1))
    outList.append(addZebra("C",10,7,13,1))
    outList.append(addZebra("C",10,7,12,1))
    outList.append(addZebra("C",11,7,19,1))
    outList.append(addZebra("C",11,7,18,1))
    outList.append(addZebra("C",12,7,7,-1))
    outList.append(addZebra("C",12,7,6,-1))
    outList.append(addZebra("C",13,7,19,1))
    outList.append(addZebra("C",13,7,18,1))
    outList.append(addZebra("C",13,7,3,1))
    outList.append(addZebra("C",14,7,1,-1))
    outList.append(addZebra("C",14,7,0,-1))
    outList.append(addZebra("C",15,7,1,-1))
    outList.append(addZebra("C",15,7,0,-1))
    outList.append(addZebra("C",16,7,15,1))
    outList.append(addZebra("C",16,7,14,1))
    outList.append(addZebra("C",16,7,13,-1))
    outList.append(addZebra("C",16,7,12,-1))
    outList.append(addZebra("C",16,7,1,1))
    outList.append(addZebra("C",16,7,0,1))
    outList.append(addZebra("C",2,8,7,1))
    outList.append(addZebra("C",2,8,6,1))
    outList.append(addZebra("C",2,8,4,-1))
    outList.append(addZebra("C",2,8,3,1))
    outList.append(addZebra("C",2,8,2,1))
    outList.append(addZebra("C",4,8,21,-1))
    outList.append(addZebra("C",4,8,15,1))
    outList.append(addZebra("C",6,8,12,-1))
    outList.append(addZebra("C",6,8,5,-1))
    outList.append(addZebra("C",6,8,4,-1))
    outList.append(addZebra("C",6,8,1,-1))
    outList.append(addZebra("C",6,8,0,-1))
    outList.append(addZebra("C",7,8,22,-1))
    outList.append(addZebra("C",7,8,21,-2))
    outList.append(addZebra("C",7,8,20,-2))
    outList.append(addZebra("C",7,8,7,1))
    outList.append(addZebra("C",7,8,6,1))
    outList.append(addZebra("C",8,8,19,1))
    outList.append(addZebra("C",8,8,18,1))
    outList.append(addZebra("C",8,8,17,-1))
    outList.append(addZebra("C",8,8,16,-1))
    outList.append(addZebra("C",9,8,19,1))
    outList.append(addZebra("C",9,8,18,1))
    outList.append(addZebra("C",9,8,17,-1))
    outList.append(addZebra("C",9,8,16,-1))
    outList.append(addZebra("C",9,8,7,1))
    outList.append(addZebra("C",9,8,6,1))
    outList.append(addZebra("C",10,8,11,1))
    outList.append(addZebra("C",10,8,10,1))
    outList.append(addZebra("C",10,8,5,-1))
    outList.append(addZebra("C",10,8,4,-1))
    outList.append(addZebra("C",10,8,3,-1))
    outList.append(addZebra("C",11,8,19,1))
    outList.append(addZebra("C",11,8,18,1))
    outList.append(addZebra("C",11,8,11,1))
    outList.append(addZebra("C",11,8,10,1))
    outList.append(addZebra("C",11,8,7,1))
    outList.append(addZebra("C",12,8,19,-1))
    outList.append(addZebra("C",12,8,18,-1))
    outList.append(addZebra("C",12,8,17,-1))
    outList.append(addZebra("C",12,8,16,-1))
    outList.append(addZebra("C",12,8,8,-1))
    outList.append(addZebra("C",12,8,3,1))
    outList.append(addZebra("C",12,8,2,1))
    outList.append(addZebra("C",12,8,0,-1))
    outList.append(addZebra("C",13,8,19,1))
    outList.append(addZebra("C",13,8,18,1))
    outList.append(addZebra("C",13,8,7,1))
    outList.append(addZebra("C",13,8,6,1))
    outList.append(addZebra("C",13,8,3,1))
    outList.append(addZebra("C",13,8,2,1))
    outList.append(addZebra("C",14,8,25,-1))
    outList.append(addZebra("C",14,8,24,-1))
    outList.append(addZebra("C",14,8,17,-1))
    outList.append(addZebra("C",14,8,16,-1))
    outList.append(addZebra("C",14,8,9,-1))
    outList.append(addZebra("C",14,8,8,-1))
    outList.append(addZebra("C",14,8,5,-1))
    outList.append(addZebra("C",14,8,4,-1))
    outList.append(addZebra("C",15,8,7,1))
    outList.append(addZebra("C",15,8,6,1))
    outList.append(addZebra("C",15,8,3,1))
    outList.append(addZebra("C",15,8,2,1))
    outList.append(addZebra("C",15,8,1,-1))
    outList.append(addZebra("C",15,8,0,-1))
    outList.append(addZebra("C",16,8,15,1))
    outList.append(addZebra("C",16,8,14,1))
    outList.append(addZebra("C",16,8,7,1))
    outList.append(addZebra("C",16,8,6,1))
    outList.append(addZebra("C",16,8,3,1))
    outList.append(addZebra("C",16,8,2,1))

    
    with open("MMGZebraShift.json","w") as f:
        json.dump(outList,f)
