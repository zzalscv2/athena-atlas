/*
  Copyright (C) 2002-2023 CERN for the benefit of the ATLAS collaboration
*/

enum Author {
  unknown = 0,
  MuidCo,
  STACO,
  MuTag,
  MuTagIMO,
  MuidSA,
  MuGirl,
  MuGirlLowBeta,
  CaloTag,
  CaloLikelihood,
  CaloScore,
  ExtrapolateMuonToIP,
  Commissioning,
  NumberOfMuonAuthors  // increase this when adding
};

enum MuonType {
  Combined,
  MuonStandAlone,
  SegmentTagged,
  CaloTagged,
  SiliconAssociatedForwardMuon
};

/// Enum for parameter indexes
enum ParamDef {
  /** Discriminators and further variables */
  spectrometerFieldIntegral = 0,  //<! B-field integral in MS
  //<! Scattering angle significance: curvature
  scatteringCurvatureSignificance = 1,
  //<! Scattering angle significance: neighbours
  scatteringNeighbourSignificance = 2,
  //<! momentum balance significance
  momentumBalanceSignificance = 3,

  /** MuTag parameters */
  segmentDeltaEta = 4,
  segmentDeltaPhi = 5,
  segmentChi2OverDoF = 6,
  /** MuGirl parameter */
  t0 = 7,
  beta = 8,
  annBarrel = 9,
  annEndCap = 10,
  /** common MuGirl and MuTag parameters */
  innAngle = 11,
  midAngle = 12,
  msInnerMatchChi2 =
      13,  //!< The chi^2 for the match of Inner detector (ID) and standalone
           //!< (SA) tracks at the entrance to the spectrometer (MS).
  msInnerMatchDOF = 14,  //!< The 'degrees of freedom' (DOF) for the match of
                         //!< Inner detector (ID) and standalone (SA) tracks
                         //!< at the entrance to the spectrometer (MS).
  msOuterMatchChi2 =
      15,  //!< The chi^2 for the match of Inner detector (ID) and standalone
           //!< (SA) tracks at the exit of the spectrometer (MS).
  msOuterMatchDOF = 16,  //!< The 'degrees of freedom' (DOF) for the match of
                         //!< Inner detector (ID) and standalone (SA) tracks
                         //!< at the exit of the spectrometer (MS).
  meanDeltaADCCountsMDT =
      17,  //!< Difference between mean number of ADC count for given track
           //!< and mean number of ADC for all muons from DATA.
  /** CaloMuon variables (EnergyLossType is stored separately and retrieved
     using energyLossType() */
  CaloLRLikelihood = 18,     //!< Calo Muon ID likelihood
  CaloMuonIDTag = 19,        //!< Calo Muon Identification tag
  FSR_CandidateEnergy = 20,  //!< FSR candidate energy [MeV]
  EnergyLoss = 21,       //!< Fitted energy loss (either param or meas depending
                         //!< on track isolation and calo meas) [Mev]
  ParamEnergyLoss = 22,  //!< Parametrised energy loss [Mev]
  MeasEnergyLoss = 23,   //!< Measured energy loss [Mev]
  EnergyLossSigma = 24,  //!< Sigma of Measured or parametrised energy loss
                         //!< used in the track fit [Mev]
  ParamEnergyLossSigmaPlus =
      25,  //!< Sigma plus of Parametrised energy loss [Mev]
  ParamEnergyLossSigmaMinus =
      26,                    //!< Sigma minus of Parametrised energy loss [Mev]
  MeasEnergyLossSigma = 27,  //!< Sigma of Measured energy loss [Mev]
  CaloMuonScore = 28,  //!< Calo Muon convolutional neural network ID score
};

enum TrackParticleType {
  Primary,
  InnerDetectorTrackParticle,
  MuonSpectrometerTrackParticle,
  CombinedTrackParticle,
  ExtrapolatedMuonSpectrometerTrackParticle,
  MSOnlyExtrapolatedMuonSpectrometerTrackParticle
};

/// Defines how the energy loss was handled for this muon
enum EnergyLossType {
  Parametrized = 0,
  NotIsolated = 1,  //!< Reconstruction configured to use the parametrization
                    //!< w/o looking in the calo (eg calo off)
  MOP = 2,   //!< Measurement found to be compatible with most probable value
             //!< --> mop used as more reliable at this region of the eloss
  Tail = 3,  //!< Measured eloss significantly higher than mop --> the calo
             //!< measurement used
  FSRcandidate =
      4  //!< In standalone reconstruction the Tail option was used. but an
         //!< imbalance is observed when comparing Pstandalone and
         //!< Pinnerdetector (Pstandalone>Pinnerdetector) --> if using the
         //!< mop resolves the imbalance the excess energy loss is stored as
         //!< fsrEnergy and the mop is used as the eloss.
};

enum Quality {
  Tight,   /// Highest purity, but lower efficiency
  Medium,  /// Usual recommended working point - a good balance between purity
           /// and efficiency
  Loose,   /// Adds segment tagged and calo tagged muons.
  VeryLoose
};  /// Low purity.

