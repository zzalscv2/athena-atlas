/*
  Copyright (C) 2002-2023 CERN for the benefit of the ATLAS collaboration
*/

namespace Trk {

inline bool Track::isValid() const {
  return (m_fitQuality && !m_trackStateVector->empty());
}

inline void Track::resetCaches() {
  m_cachedParameterVector.reset();
  m_cachedMeasurementVector.reset();
  m_cachedOutlierVector.reset();
  m_perigeeParameters.reset();
}

inline const FitQuality* Track::fitQuality() const {
  return m_fitQuality.get();
}

inline FitQuality* Track::fitQuality() {
  return m_fitQuality.get();
}

inline void Track::setFitQuality(std::unique_ptr<FitQuality> quality) {
  m_fitQuality = std::move(quality);
}

inline const Trk::TrackStates*
Track::trackStateOnSurfaces() const {
  return m_trackStateVector.get();
}

inline Trk::TrackStates* Track::trackStateOnSurfaces() {
  return m_trackStateVector.get();
}

inline void Track::setTrackStateOnSurfaces(
    std::unique_ptr<DataVector<const Trk::TrackStateOnSurface>> input) {
  m_trackStateVector = std::move(input);
  resetCaches();
}

inline const TrackInfo& Track::info() const {
  return m_trackInfo;
}

inline TrackInfo& Track::info() {
  return m_trackInfo;
}

inline void Track::setInfo(const TrackInfo& input) {
  m_trackInfo = input;
}

inline const TrackSummary* Track::trackSummary() const {
  return m_trackSummary.get();
}

inline TrackSummary* Track::trackSummary() {
  return m_trackSummary.get();
}

inline void Track::setTrackSummary(std::unique_ptr<Trk::TrackSummary> input) {
  m_trackSummary = std::move(input);
}

}  // namespace Trk
