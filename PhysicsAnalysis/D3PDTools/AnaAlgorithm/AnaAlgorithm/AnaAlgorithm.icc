/*
  Copyright (C) 2002-2019 CERN for the benefit of the ATLAS collaboration
*/

/// @author Nils Krumnack



//
// includes
//

//
// method implementations
//

namespace EL
{
#ifdef XAOD_STANDALONE
  template<typename T> T *AnaAlgorithm ::
  hist (const std::string& name) const
  {
    T *result = dynamic_cast<T*>(hist<TObject>(name));
    if (result == nullptr)
      throw std::runtime_error ("histogram not of the right type: " + name + " " + typeid(T).name());
    return result;
  }



  inline TEfficiency *AnaAlgorithm ::
  efficiency (const std::string& name) const
  {
    return histeff (name);
  }



  template<> TObject *AnaAlgorithm ::
  hist<TObject> (const std::string& name) const;
#endif
}
