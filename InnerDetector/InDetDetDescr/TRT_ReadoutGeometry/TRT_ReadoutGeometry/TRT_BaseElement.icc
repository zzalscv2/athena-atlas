/*
  Copyright (C) 2002-2023 CERN for the benefit of the ATLAS collaboration
*/

namespace InDetDD {

// Get the number of straws:
inline unsigned int
TRT_BaseElement::nStraws() const
{
  return m_nstraws;
}

inline const GeoTrf::Transform3D&
TRT_BaseElement::defTransform() const
{
  return getMaterialGeom()->getDefAbsoluteTransform();
}

inline const Trk::Surface&
TRT_BaseElement::surface() const
{
  return elementSurface();
}

inline const Trk::SurfaceBounds&
TRT_BaseElement::bounds() const
{
  if (!m_surfaceCache.isValid()) {
    createSurfaceCache();
  }
  return *(m_surfaceCache.ptr()->bounds());
}

inline const Amg::Transform3D&
TRT_BaseElement::transform() const
{
  if (!m_surfaceCache.isValid()) {
    createSurfaceCache();
  }
  return m_surfaceCache.ptr()->transform();
}

inline const Amg::Vector3D&
TRT_BaseElement::center() const
{
  if (!m_surfaceCache.isValid()) {
    createSurfaceCache();
  }
  return m_surfaceCache.ptr()->center();
}

inline const Amg::Vector3D&
TRT_BaseElement::normal() const
{
  if (!m_surfaceCache.isValid()) {
    createSurfaceCache();
  }
  return m_surfaceCache.ptr()->normal();
}

inline Trk::DetectorElemType
TRT_BaseElement::detectorType() const
{
  return Trk::DetectorElemType::TRT;
}

inline Identifier
TRT_BaseElement::identify() const
{
  return m_id;
}

inline IdentifierHash
TRT_BaseElement::identifyHash() const
{
  return m_idHash;
}

inline const TRT_Conditions*
TRT_BaseElement::conditions() const
{
  return m_conditions;
}

}
